
Zadatak 5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000562  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004ee  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000562  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000562  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000594  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000005d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a3d  00000000  00000000  0000064c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000802  00000000  00000000  00001089  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004e9  00000000  00000000  0000188b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00001d74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044b  00000000  00000000  00001e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002f1  00000000  00000000  000022a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002594  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ee       	ldi	r30, 0xEE	; 238
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 30       	cpi	r26, 0x02	; 2
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 bc 00 	call	0x178	; 0x178 <main>
  9e:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_init>:
void uart_init(void)
{
	// Registri UBRR0H I UBRR0L zajedno èine djelitelj brzine komunikacije
	// UBRRH_VALUE je vrijednost gornjeg bajta djelitelja koji je izraèunat u
	// biblioteci setbaud.h
	UBRR0H = UBRRH_VALUE;
  a6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	// UBBRL_VALUE je vrijednost donjeg bajta djelitelja koji je izraèunat u
	// biblioteci setbaud.h
	UBRR0L = UBRRL_VALUE;
  aa:	87 e6       	ldi	r24, 0x67	; 103
  ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	#if USE_2X
	// Ako se koristi postavlja se U2X0 registar u 1
	UCSR0A |= _BV(U2X0);
	#else
	// Ako ne postavlja se u 0
	UCSR0A &= ~(_BV(U2X0));
  b0:	e0 ec       	ldi	r30, 0xC0	; 192
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	8d 7f       	andi	r24, 0xFD	; 253
  b8:	80 83       	st	Z, r24
	#endif
	// Omoguæavanje 8-bitnih podataka
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
  ba:	86 e0       	ldi	r24, 0x06	; 6
  bc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	// Omoguæavanje RX i TX pinova
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);
  c0:	88 e1       	ldi	r24, 0x18	; 24
  c2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  c6:	08 95       	ret

000000c8 <loop>:
	}
}

void loop()
{
	switch ((int)round((float)elapsed_from_0 / DELAY) % LED_COUNT) {
  c8:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_end>
  cc:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_end+0x1>
  d0:	07 2e       	mov	r0, r23
  d2:	00 0c       	add	r0, r0
  d4:	88 0b       	sbc	r24, r24
  d6:	99 0b       	sbc	r25, r25
  d8:	0e 94 74 01 	call	0x2e8	; 0x2e8 <__floatsisf>
  dc:	20 e0       	ldi	r18, 0x00	; 0
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	48 e4       	ldi	r20, 0x48	; 72
  e2:	53 e4       	ldi	r21, 0x43	; 67
  e4:	0e 94 ca 00 	call	0x194	; 0x194 <__divsf3>
  e8:	0e 94 00 02 	call	0x400	; 0x400 <round>
  ec:	0e 94 3c 01 	call	0x278	; 0x278 <__fixsfsi>
  f0:	cb 01       	movw	r24, r22
  f2:	65 e0       	ldi	r22, 0x05	; 5
  f4:	70 e0       	ldi	r23, 0x00	; 0
  f6:	0e 94 4d 02 	call	0x49a	; 0x49a <__divmodhi4>
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	91 05       	cpc	r25, r1
  fe:	d1 f0       	breq	.+52     	; 0x134 <loop+0x6c>
 100:	2c f4       	brge	.+10     	; 0x10c <loop+0x44>
 102:	00 97       	sbiw	r24, 0x00	; 0
 104:	49 f0       	breq	.+18     	; 0x118 <loop+0x50>
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	81 f0       	breq	.+32     	; 0x12a <loop+0x62>
 10a:	22 c0       	rjmp	.+68     	; 0x150 <loop+0x88>
 10c:	83 30       	cpi	r24, 0x03	; 3
 10e:	91 05       	cpc	r25, r1
 110:	b1 f0       	breq	.+44     	; 0x13e <loop+0x76>
 112:	04 97       	sbiw	r24, 0x04	; 4
 114:	c9 f0       	breq	.+50     	; 0x148 <loop+0x80>
 116:	1c c0       	rjmp	.+56     	; 0x150 <loop+0x88>
		case 0:
		PORTD &= 0b10000011;
 118:	8b b1       	in	r24, 0x0b	; 11
 11a:	83 78       	andi	r24, 0x83	; 131
 11c:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b01000000;
 11e:	5e 9a       	sbi	0x0b, 6	; 11
		elapsed_from_0 = 0;
 120:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_end+0x1>
 124:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
		break;
 128:	13 c0       	rjmp	.+38     	; 0x150 <loop+0x88>
		case 1:
		PORTD &= 0b10000011;
 12a:	8b b1       	in	r24, 0x0b	; 11
 12c:	83 78       	andi	r24, 0x83	; 131
 12e:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00100000;
 130:	5d 9a       	sbi	0x0b, 5	; 11
		break;
 132:	0e c0       	rjmp	.+28     	; 0x150 <loop+0x88>
		case 2:
		PORTD &= 0b10000011;
 134:	8b b1       	in	r24, 0x0b	; 11
 136:	83 78       	andi	r24, 0x83	; 131
 138:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00010000;
 13a:	5c 9a       	sbi	0x0b, 4	; 11
		break;
 13c:	09 c0       	rjmp	.+18     	; 0x150 <loop+0x88>
		case 3:
		PORTD &= 0b10000011;
 13e:	8b b1       	in	r24, 0x0b	; 11
 140:	83 78       	andi	r24, 0x83	; 131
 142:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00001000;
 144:	5b 9a       	sbi	0x0b, 3	; 11
		break;
 146:	04 c0       	rjmp	.+8      	; 0x150 <loop+0x88>
		case 4:
		PORTD &= 0b10000011;
 148:	8b b1       	in	r24, 0x0b	; 11
 14a:	83 78       	andi	r24, 0x83	; 131
 14c:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00000100;
 14e:	5a 9a       	sbi	0x0b, 2	; 11
		break;
		default:
		break;
	}
	elapsed_from_0 += DELAY;
 150:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 154:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
 158:	88 53       	subi	r24, 0x38	; 56
 15a:	9f 4f       	sbci	r25, 0xFF	; 255
 15c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_end+0x1>
 160:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 164:	2f ef       	ldi	r18, 0xFF	; 255
 166:	83 ec       	ldi	r24, 0xC3	; 195
 168:	99 e0       	ldi	r25, 0x09	; 9
 16a:	21 50       	subi	r18, 0x01	; 1
 16c:	80 40       	sbci	r24, 0x00	; 0
 16e:	90 40       	sbci	r25, 0x00	; 0
 170:	e1 f7       	brne	.-8      	; 0x16a <loop+0xa2>
 172:	00 c0       	rjmp	.+0      	; 0x174 <loop+0xac>
 174:	00 00       	nop
 176:	08 95       	ret

00000178 <main>:
int main(void)
{
	// Tipkala
	//pinMode(8, INPUT_PULLUP);
	//pinMode(9, INPUT_PULLUP);
	DDRB &= 0b111100;
 178:	84 b1       	in	r24, 0x04	; 4
 17a:	8c 73       	andi	r24, 0x3C	; 60
 17c:	84 b9       	out	0x04, r24	; 4
	PORTB |= 0b000011;
 17e:	85 b1       	in	r24, 0x05	; 5
 180:	83 60       	ori	r24, 0x03	; 3
 182:	85 b9       	out	0x05, r24	; 5

	// LED-ice
	//pinMode(2, OUTPUT);
	//...
	//pinMode(6, OUTPUT);
	DDRD |= 0b01111100;
 184:	8a b1       	in	r24, 0x0a	; 10
 186:	8c 67       	ori	r24, 0x7C	; 124
 188:	8a b9       	out	0x0a, r24	; 10

	//Serial.begin(9600);
	uart_init();
 18a:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_init>

	while (1)
	{
		loop();
 18e:	0e 94 64 00 	call	0xc8	; 0xc8 <loop>
 192:	fd cf       	rjmp	.-6      	; 0x18e <main+0x16>

00000194 <__divsf3>:
 194:	0e 94 de 00 	call	0x1bc	; 0x1bc <__divsf3x>
 198:	0c 94 c6 01 	jmp	0x38c	; 0x38c <__fp_round>
 19c:	0e 94 bf 01 	call	0x37e	; 0x37e <__fp_pscB>
 1a0:	58 f0       	brcs	.+22     	; 0x1b8 <__divsf3+0x24>
 1a2:	0e 94 b8 01 	call	0x370	; 0x370 <__fp_pscA>
 1a6:	40 f0       	brcs	.+16     	; 0x1b8 <__divsf3+0x24>
 1a8:	29 f4       	brne	.+10     	; 0x1b4 <__divsf3+0x20>
 1aa:	5f 3f       	cpi	r21, 0xFF	; 255
 1ac:	29 f0       	breq	.+10     	; 0x1b8 <__divsf3+0x24>
 1ae:	0c 94 af 01 	jmp	0x35e	; 0x35e <__fp_inf>
 1b2:	51 11       	cpse	r21, r1
 1b4:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__fp_szero>
 1b8:	0c 94 b5 01 	jmp	0x36a	; 0x36a <__fp_nan>

000001bc <__divsf3x>:
 1bc:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__fp_split3>
 1c0:	68 f3       	brcs	.-38     	; 0x19c <__divsf3+0x8>

000001c2 <__divsf3_pse>:
 1c2:	99 23       	and	r25, r25
 1c4:	b1 f3       	breq	.-20     	; 0x1b2 <__divsf3+0x1e>
 1c6:	55 23       	and	r21, r21
 1c8:	91 f3       	breq	.-28     	; 0x1ae <__divsf3+0x1a>
 1ca:	95 1b       	sub	r25, r21
 1cc:	55 0b       	sbc	r21, r21
 1ce:	bb 27       	eor	r27, r27
 1d0:	aa 27       	eor	r26, r26
 1d2:	62 17       	cp	r22, r18
 1d4:	73 07       	cpc	r23, r19
 1d6:	84 07       	cpc	r24, r20
 1d8:	38 f0       	brcs	.+14     	; 0x1e8 <__divsf3_pse+0x26>
 1da:	9f 5f       	subi	r25, 0xFF	; 255
 1dc:	5f 4f       	sbci	r21, 0xFF	; 255
 1de:	22 0f       	add	r18, r18
 1e0:	33 1f       	adc	r19, r19
 1e2:	44 1f       	adc	r20, r20
 1e4:	aa 1f       	adc	r26, r26
 1e6:	a9 f3       	breq	.-22     	; 0x1d2 <__divsf3_pse+0x10>
 1e8:	35 d0       	rcall	.+106    	; 0x254 <__divsf3_pse+0x92>
 1ea:	0e 2e       	mov	r0, r30
 1ec:	3a f0       	brmi	.+14     	; 0x1fc <__divsf3_pse+0x3a>
 1ee:	e0 e8       	ldi	r30, 0x80	; 128
 1f0:	32 d0       	rcall	.+100    	; 0x256 <__divsf3_pse+0x94>
 1f2:	91 50       	subi	r25, 0x01	; 1
 1f4:	50 40       	sbci	r21, 0x00	; 0
 1f6:	e6 95       	lsr	r30
 1f8:	00 1c       	adc	r0, r0
 1fa:	ca f7       	brpl	.-14     	; 0x1ee <__divsf3_pse+0x2c>
 1fc:	2b d0       	rcall	.+86     	; 0x254 <__divsf3_pse+0x92>
 1fe:	fe 2f       	mov	r31, r30
 200:	29 d0       	rcall	.+82     	; 0x254 <__divsf3_pse+0x92>
 202:	66 0f       	add	r22, r22
 204:	77 1f       	adc	r23, r23
 206:	88 1f       	adc	r24, r24
 208:	bb 1f       	adc	r27, r27
 20a:	26 17       	cp	r18, r22
 20c:	37 07       	cpc	r19, r23
 20e:	48 07       	cpc	r20, r24
 210:	ab 07       	cpc	r26, r27
 212:	b0 e8       	ldi	r27, 0x80	; 128
 214:	09 f0       	breq	.+2      	; 0x218 <__divsf3_pse+0x56>
 216:	bb 0b       	sbc	r27, r27
 218:	80 2d       	mov	r24, r0
 21a:	bf 01       	movw	r22, r30
 21c:	ff 27       	eor	r31, r31
 21e:	93 58       	subi	r25, 0x83	; 131
 220:	5f 4f       	sbci	r21, 0xFF	; 255
 222:	3a f0       	brmi	.+14     	; 0x232 <__divsf3_pse+0x70>
 224:	9e 3f       	cpi	r25, 0xFE	; 254
 226:	51 05       	cpc	r21, r1
 228:	78 f0       	brcs	.+30     	; 0x248 <__divsf3_pse+0x86>
 22a:	0c 94 af 01 	jmp	0x35e	; 0x35e <__fp_inf>
 22e:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__fp_szero>
 232:	5f 3f       	cpi	r21, 0xFF	; 255
 234:	e4 f3       	brlt	.-8      	; 0x22e <__divsf3_pse+0x6c>
 236:	98 3e       	cpi	r25, 0xE8	; 232
 238:	d4 f3       	brlt	.-12     	; 0x22e <__divsf3_pse+0x6c>
 23a:	86 95       	lsr	r24
 23c:	77 95       	ror	r23
 23e:	67 95       	ror	r22
 240:	b7 95       	ror	r27
 242:	f7 95       	ror	r31
 244:	9f 5f       	subi	r25, 0xFF	; 255
 246:	c9 f7       	brne	.-14     	; 0x23a <__divsf3_pse+0x78>
 248:	88 0f       	add	r24, r24
 24a:	91 1d       	adc	r25, r1
 24c:	96 95       	lsr	r25
 24e:	87 95       	ror	r24
 250:	97 f9       	bld	r25, 7
 252:	08 95       	ret
 254:	e1 e0       	ldi	r30, 0x01	; 1
 256:	66 0f       	add	r22, r22
 258:	77 1f       	adc	r23, r23
 25a:	88 1f       	adc	r24, r24
 25c:	bb 1f       	adc	r27, r27
 25e:	62 17       	cp	r22, r18
 260:	73 07       	cpc	r23, r19
 262:	84 07       	cpc	r24, r20
 264:	ba 07       	cpc	r27, r26
 266:	20 f0       	brcs	.+8      	; 0x270 <__divsf3_pse+0xae>
 268:	62 1b       	sub	r22, r18
 26a:	73 0b       	sbc	r23, r19
 26c:	84 0b       	sbc	r24, r20
 26e:	ba 0b       	sbc	r27, r26
 270:	ee 1f       	adc	r30, r30
 272:	88 f7       	brcc	.-30     	; 0x256 <__divsf3_pse+0x94>
 274:	e0 95       	com	r30
 276:	08 95       	ret

00000278 <__fixsfsi>:
 278:	0e 94 43 01 	call	0x286	; 0x286 <__fixunssfsi>
 27c:	68 94       	set
 27e:	b1 11       	cpse	r27, r1
 280:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__fp_szero>
 284:	08 95       	ret

00000286 <__fixunssfsi>:
 286:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_splitA>
 28a:	88 f0       	brcs	.+34     	; 0x2ae <__fixunssfsi+0x28>
 28c:	9f 57       	subi	r25, 0x7F	; 127
 28e:	98 f0       	brcs	.+38     	; 0x2b6 <__fixunssfsi+0x30>
 290:	b9 2f       	mov	r27, r25
 292:	99 27       	eor	r25, r25
 294:	b7 51       	subi	r27, 0x17	; 23
 296:	b0 f0       	brcs	.+44     	; 0x2c4 <__fixunssfsi+0x3e>
 298:	e1 f0       	breq	.+56     	; 0x2d2 <__fixunssfsi+0x4c>
 29a:	66 0f       	add	r22, r22
 29c:	77 1f       	adc	r23, r23
 29e:	88 1f       	adc	r24, r24
 2a0:	99 1f       	adc	r25, r25
 2a2:	1a f0       	brmi	.+6      	; 0x2aa <__fixunssfsi+0x24>
 2a4:	ba 95       	dec	r27
 2a6:	c9 f7       	brne	.-14     	; 0x29a <__fixunssfsi+0x14>
 2a8:	14 c0       	rjmp	.+40     	; 0x2d2 <__fixunssfsi+0x4c>
 2aa:	b1 30       	cpi	r27, 0x01	; 1
 2ac:	91 f0       	breq	.+36     	; 0x2d2 <__fixunssfsi+0x4c>
 2ae:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__fp_zero>
 2b2:	b1 e0       	ldi	r27, 0x01	; 1
 2b4:	08 95       	ret
 2b6:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_zero>
 2ba:	67 2f       	mov	r22, r23
 2bc:	78 2f       	mov	r23, r24
 2be:	88 27       	eor	r24, r24
 2c0:	b8 5f       	subi	r27, 0xF8	; 248
 2c2:	39 f0       	breq	.+14     	; 0x2d2 <__fixunssfsi+0x4c>
 2c4:	b9 3f       	cpi	r27, 0xF9	; 249
 2c6:	cc f3       	brlt	.-14     	; 0x2ba <__fixunssfsi+0x34>
 2c8:	86 95       	lsr	r24
 2ca:	77 95       	ror	r23
 2cc:	67 95       	ror	r22
 2ce:	b3 95       	inc	r27
 2d0:	d9 f7       	brne	.-10     	; 0x2c8 <__fixunssfsi+0x42>
 2d2:	3e f4       	brtc	.+14     	; 0x2e2 <__fixunssfsi+0x5c>
 2d4:	90 95       	com	r25
 2d6:	80 95       	com	r24
 2d8:	70 95       	com	r23
 2da:	61 95       	neg	r22
 2dc:	7f 4f       	sbci	r23, 0xFF	; 255
 2de:	8f 4f       	sbci	r24, 0xFF	; 255
 2e0:	9f 4f       	sbci	r25, 0xFF	; 255
 2e2:	08 95       	ret

000002e4 <__floatunsisf>:
 2e4:	e8 94       	clt
 2e6:	09 c0       	rjmp	.+18     	; 0x2fa <__floatsisf+0x12>

000002e8 <__floatsisf>:
 2e8:	97 fb       	bst	r25, 7
 2ea:	3e f4       	brtc	.+14     	; 0x2fa <__floatsisf+0x12>
 2ec:	90 95       	com	r25
 2ee:	80 95       	com	r24
 2f0:	70 95       	com	r23
 2f2:	61 95       	neg	r22
 2f4:	7f 4f       	sbci	r23, 0xFF	; 255
 2f6:	8f 4f       	sbci	r24, 0xFF	; 255
 2f8:	9f 4f       	sbci	r25, 0xFF	; 255
 2fa:	99 23       	and	r25, r25
 2fc:	a9 f0       	breq	.+42     	; 0x328 <__floatsisf+0x40>
 2fe:	f9 2f       	mov	r31, r25
 300:	96 e9       	ldi	r25, 0x96	; 150
 302:	bb 27       	eor	r27, r27
 304:	93 95       	inc	r25
 306:	f6 95       	lsr	r31
 308:	87 95       	ror	r24
 30a:	77 95       	ror	r23
 30c:	67 95       	ror	r22
 30e:	b7 95       	ror	r27
 310:	f1 11       	cpse	r31, r1
 312:	f8 cf       	rjmp	.-16     	; 0x304 <__floatsisf+0x1c>
 314:	fa f4       	brpl	.+62     	; 0x354 <__floatsisf+0x6c>
 316:	bb 0f       	add	r27, r27
 318:	11 f4       	brne	.+4      	; 0x31e <__floatsisf+0x36>
 31a:	60 ff       	sbrs	r22, 0
 31c:	1b c0       	rjmp	.+54     	; 0x354 <__floatsisf+0x6c>
 31e:	6f 5f       	subi	r22, 0xFF	; 255
 320:	7f 4f       	sbci	r23, 0xFF	; 255
 322:	8f 4f       	sbci	r24, 0xFF	; 255
 324:	9f 4f       	sbci	r25, 0xFF	; 255
 326:	16 c0       	rjmp	.+44     	; 0x354 <__floatsisf+0x6c>
 328:	88 23       	and	r24, r24
 32a:	11 f0       	breq	.+4      	; 0x330 <__floatsisf+0x48>
 32c:	96 e9       	ldi	r25, 0x96	; 150
 32e:	11 c0       	rjmp	.+34     	; 0x352 <__floatsisf+0x6a>
 330:	77 23       	and	r23, r23
 332:	21 f0       	breq	.+8      	; 0x33c <__floatsisf+0x54>
 334:	9e e8       	ldi	r25, 0x8E	; 142
 336:	87 2f       	mov	r24, r23
 338:	76 2f       	mov	r23, r22
 33a:	05 c0       	rjmp	.+10     	; 0x346 <__floatsisf+0x5e>
 33c:	66 23       	and	r22, r22
 33e:	71 f0       	breq	.+28     	; 0x35c <__floatsisf+0x74>
 340:	96 e8       	ldi	r25, 0x86	; 134
 342:	86 2f       	mov	r24, r22
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	2a f0       	brmi	.+10     	; 0x354 <__floatsisf+0x6c>
 34a:	9a 95       	dec	r25
 34c:	66 0f       	add	r22, r22
 34e:	77 1f       	adc	r23, r23
 350:	88 1f       	adc	r24, r24
 352:	da f7       	brpl	.-10     	; 0x34a <__floatsisf+0x62>
 354:	88 0f       	add	r24, r24
 356:	96 95       	lsr	r25
 358:	87 95       	ror	r24
 35a:	97 f9       	bld	r25, 7
 35c:	08 95       	ret

0000035e <__fp_inf>:
 35e:	97 f9       	bld	r25, 7
 360:	9f 67       	ori	r25, 0x7F	; 127
 362:	80 e8       	ldi	r24, 0x80	; 128
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	60 e0       	ldi	r22, 0x00	; 0
 368:	08 95       	ret

0000036a <__fp_nan>:
 36a:	9f ef       	ldi	r25, 0xFF	; 255
 36c:	80 ec       	ldi	r24, 0xC0	; 192
 36e:	08 95       	ret

00000370 <__fp_pscA>:
 370:	00 24       	eor	r0, r0
 372:	0a 94       	dec	r0
 374:	16 16       	cp	r1, r22
 376:	17 06       	cpc	r1, r23
 378:	18 06       	cpc	r1, r24
 37a:	09 06       	cpc	r0, r25
 37c:	08 95       	ret

0000037e <__fp_pscB>:
 37e:	00 24       	eor	r0, r0
 380:	0a 94       	dec	r0
 382:	12 16       	cp	r1, r18
 384:	13 06       	cpc	r1, r19
 386:	14 06       	cpc	r1, r20
 388:	05 06       	cpc	r0, r21
 38a:	08 95       	ret

0000038c <__fp_round>:
 38c:	09 2e       	mov	r0, r25
 38e:	03 94       	inc	r0
 390:	00 0c       	add	r0, r0
 392:	11 f4       	brne	.+4      	; 0x398 <__fp_round+0xc>
 394:	88 23       	and	r24, r24
 396:	52 f0       	brmi	.+20     	; 0x3ac <__fp_round+0x20>
 398:	bb 0f       	add	r27, r27
 39a:	40 f4       	brcc	.+16     	; 0x3ac <__fp_round+0x20>
 39c:	bf 2b       	or	r27, r31
 39e:	11 f4       	brne	.+4      	; 0x3a4 <__fp_round+0x18>
 3a0:	60 ff       	sbrs	r22, 0
 3a2:	04 c0       	rjmp	.+8      	; 0x3ac <__fp_round+0x20>
 3a4:	6f 5f       	subi	r22, 0xFF	; 255
 3a6:	7f 4f       	sbci	r23, 0xFF	; 255
 3a8:	8f 4f       	sbci	r24, 0xFF	; 255
 3aa:	9f 4f       	sbci	r25, 0xFF	; 255
 3ac:	08 95       	ret

000003ae <__fp_split3>:
 3ae:	57 fd       	sbrc	r21, 7
 3b0:	90 58       	subi	r25, 0x80	; 128
 3b2:	44 0f       	add	r20, r20
 3b4:	55 1f       	adc	r21, r21
 3b6:	59 f0       	breq	.+22     	; 0x3ce <__fp_splitA+0x10>
 3b8:	5f 3f       	cpi	r21, 0xFF	; 255
 3ba:	71 f0       	breq	.+28     	; 0x3d8 <__fp_splitA+0x1a>
 3bc:	47 95       	ror	r20

000003be <__fp_splitA>:
 3be:	88 0f       	add	r24, r24
 3c0:	97 fb       	bst	r25, 7
 3c2:	99 1f       	adc	r25, r25
 3c4:	61 f0       	breq	.+24     	; 0x3de <__fp_splitA+0x20>
 3c6:	9f 3f       	cpi	r25, 0xFF	; 255
 3c8:	79 f0       	breq	.+30     	; 0x3e8 <__fp_splitA+0x2a>
 3ca:	87 95       	ror	r24
 3cc:	08 95       	ret
 3ce:	12 16       	cp	r1, r18
 3d0:	13 06       	cpc	r1, r19
 3d2:	14 06       	cpc	r1, r20
 3d4:	55 1f       	adc	r21, r21
 3d6:	f2 cf       	rjmp	.-28     	; 0x3bc <__fp_split3+0xe>
 3d8:	46 95       	lsr	r20
 3da:	f1 df       	rcall	.-30     	; 0x3be <__fp_splitA>
 3dc:	08 c0       	rjmp	.+16     	; 0x3ee <__fp_splitA+0x30>
 3de:	16 16       	cp	r1, r22
 3e0:	17 06       	cpc	r1, r23
 3e2:	18 06       	cpc	r1, r24
 3e4:	99 1f       	adc	r25, r25
 3e6:	f1 cf       	rjmp	.-30     	; 0x3ca <__fp_splitA+0xc>
 3e8:	86 95       	lsr	r24
 3ea:	71 05       	cpc	r23, r1
 3ec:	61 05       	cpc	r22, r1
 3ee:	08 94       	sec
 3f0:	08 95       	ret

000003f2 <__fp_zero>:
 3f2:	e8 94       	clt

000003f4 <__fp_szero>:
 3f4:	bb 27       	eor	r27, r27
 3f6:	66 27       	eor	r22, r22
 3f8:	77 27       	eor	r23, r23
 3fa:	cb 01       	movw	r24, r22
 3fc:	97 f9       	bld	r25, 7
 3fe:	08 95       	ret

00000400 <round>:
 400:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_splitA>
 404:	e8 f0       	brcs	.+58     	; 0x440 <round+0x40>
 406:	9e 37       	cpi	r25, 0x7E	; 126
 408:	e8 f0       	brcs	.+58     	; 0x444 <round+0x44>
 40a:	96 39       	cpi	r25, 0x96	; 150
 40c:	b8 f4       	brcc	.+46     	; 0x43c <round+0x3c>
 40e:	9e 38       	cpi	r25, 0x8E	; 142
 410:	48 f4       	brcc	.+18     	; 0x424 <round+0x24>
 412:	67 2f       	mov	r22, r23
 414:	78 2f       	mov	r23, r24
 416:	88 27       	eor	r24, r24
 418:	98 5f       	subi	r25, 0xF8	; 248
 41a:	f9 cf       	rjmp	.-14     	; 0x40e <round+0xe>
 41c:	86 95       	lsr	r24
 41e:	77 95       	ror	r23
 420:	67 95       	ror	r22
 422:	93 95       	inc	r25
 424:	95 39       	cpi	r25, 0x95	; 149
 426:	d0 f3       	brcs	.-12     	; 0x41c <round+0x1c>
 428:	b6 2f       	mov	r27, r22
 42a:	b1 70       	andi	r27, 0x01	; 1
 42c:	6b 0f       	add	r22, r27
 42e:	71 1d       	adc	r23, r1
 430:	81 1d       	adc	r24, r1
 432:	20 f4       	brcc	.+8      	; 0x43c <round+0x3c>
 434:	87 95       	ror	r24
 436:	77 95       	ror	r23
 438:	67 95       	ror	r22
 43a:	93 95       	inc	r25
 43c:	0c 94 24 02 	jmp	0x448	; 0x448 <__fp_mintl>
 440:	0c 94 3f 02 	jmp	0x47e	; 0x47e <__fp_mpack>
 444:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__fp_szero>

00000448 <__fp_mintl>:
 448:	88 23       	and	r24, r24
 44a:	71 f4       	brne	.+28     	; 0x468 <__fp_mintl+0x20>
 44c:	77 23       	and	r23, r23
 44e:	21 f0       	breq	.+8      	; 0x458 <__fp_mintl+0x10>
 450:	98 50       	subi	r25, 0x08	; 8
 452:	87 2b       	or	r24, r23
 454:	76 2f       	mov	r23, r22
 456:	07 c0       	rjmp	.+14     	; 0x466 <__fp_mintl+0x1e>
 458:	66 23       	and	r22, r22
 45a:	11 f4       	brne	.+4      	; 0x460 <__fp_mintl+0x18>
 45c:	99 27       	eor	r25, r25
 45e:	0d c0       	rjmp	.+26     	; 0x47a <__fp_mintl+0x32>
 460:	90 51       	subi	r25, 0x10	; 16
 462:	86 2b       	or	r24, r22
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	60 e0       	ldi	r22, 0x00	; 0
 468:	2a f0       	brmi	.+10     	; 0x474 <__fp_mintl+0x2c>
 46a:	9a 95       	dec	r25
 46c:	66 0f       	add	r22, r22
 46e:	77 1f       	adc	r23, r23
 470:	88 1f       	adc	r24, r24
 472:	da f7       	brpl	.-10     	; 0x46a <__fp_mintl+0x22>
 474:	88 0f       	add	r24, r24
 476:	96 95       	lsr	r25
 478:	87 95       	ror	r24
 47a:	97 f9       	bld	r25, 7
 47c:	08 95       	ret

0000047e <__fp_mpack>:
 47e:	9f 3f       	cpi	r25, 0xFF	; 255
 480:	31 f0       	breq	.+12     	; 0x48e <__fp_mpack_finite+0xc>

00000482 <__fp_mpack_finite>:
 482:	91 50       	subi	r25, 0x01	; 1
 484:	20 f4       	brcc	.+8      	; 0x48e <__fp_mpack_finite+0xc>
 486:	87 95       	ror	r24
 488:	77 95       	ror	r23
 48a:	67 95       	ror	r22
 48c:	b7 95       	ror	r27
 48e:	88 0f       	add	r24, r24
 490:	91 1d       	adc	r25, r1
 492:	96 95       	lsr	r25
 494:	87 95       	ror	r24
 496:	97 f9       	bld	r25, 7
 498:	08 95       	ret

0000049a <__divmodhi4>:
 49a:	97 fb       	bst	r25, 7
 49c:	07 2e       	mov	r0, r23
 49e:	16 f4       	brtc	.+4      	; 0x4a4 <__divmodhi4+0xa>
 4a0:	00 94       	com	r0
 4a2:	07 d0       	rcall	.+14     	; 0x4b2 <__divmodhi4_neg1>
 4a4:	77 fd       	sbrc	r23, 7
 4a6:	09 d0       	rcall	.+18     	; 0x4ba <__divmodhi4_neg2>
 4a8:	0e 94 61 02 	call	0x4c2	; 0x4c2 <__udivmodhi4>
 4ac:	07 fc       	sbrc	r0, 7
 4ae:	05 d0       	rcall	.+10     	; 0x4ba <__divmodhi4_neg2>
 4b0:	3e f4       	brtc	.+14     	; 0x4c0 <__divmodhi4_exit>

000004b2 <__divmodhi4_neg1>:
 4b2:	90 95       	com	r25
 4b4:	81 95       	neg	r24
 4b6:	9f 4f       	sbci	r25, 0xFF	; 255
 4b8:	08 95       	ret

000004ba <__divmodhi4_neg2>:
 4ba:	70 95       	com	r23
 4bc:	61 95       	neg	r22
 4be:	7f 4f       	sbci	r23, 0xFF	; 255

000004c0 <__divmodhi4_exit>:
 4c0:	08 95       	ret

000004c2 <__udivmodhi4>:
 4c2:	aa 1b       	sub	r26, r26
 4c4:	bb 1b       	sub	r27, r27
 4c6:	51 e1       	ldi	r21, 0x11	; 17
 4c8:	07 c0       	rjmp	.+14     	; 0x4d8 <__udivmodhi4_ep>

000004ca <__udivmodhi4_loop>:
 4ca:	aa 1f       	adc	r26, r26
 4cc:	bb 1f       	adc	r27, r27
 4ce:	a6 17       	cp	r26, r22
 4d0:	b7 07       	cpc	r27, r23
 4d2:	10 f0       	brcs	.+4      	; 0x4d8 <__udivmodhi4_ep>
 4d4:	a6 1b       	sub	r26, r22
 4d6:	b7 0b       	sbc	r27, r23

000004d8 <__udivmodhi4_ep>:
 4d8:	88 1f       	adc	r24, r24
 4da:	99 1f       	adc	r25, r25
 4dc:	5a 95       	dec	r21
 4de:	a9 f7       	brne	.-22     	; 0x4ca <__udivmodhi4_loop>
 4e0:	80 95       	com	r24
 4e2:	90 95       	com	r25
 4e4:	bc 01       	movw	r22, r24
 4e6:	cd 01       	movw	r24, r26
 4e8:	08 95       	ret

000004ea <_exit>:
 4ea:	f8 94       	cli

000004ec <__stop_program>:
 4ec:	ff cf       	rjmp	.-2      	; 0x4ec <__stop_program>
