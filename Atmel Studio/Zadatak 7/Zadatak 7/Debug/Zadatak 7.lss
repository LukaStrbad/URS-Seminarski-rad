
Zadatak 7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00000c6e  00000d02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c6e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080011a  0080011a  00000d1c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d1c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d4c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b7d  00000000  00000000  00000e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000863  00000000  00000000  00001999  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000060a  00000000  00000000  000021fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  00002808  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000484  00000000  00000000  0000293c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000339  00000000  00000000  00002dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  000030f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__ctors_end>
   4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  2c:	0c 94 12 01 	jmp	0x224	; 0x224 <__vector_11>
  30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  68:	08 00       	.word	0x0008	; ????
  6a:	00 00       	nop
  6c:	be 92       	st	-X, r11
  6e:	24 49       	sbci	r18, 0x94	; 148
  70:	12 3e       	cpi	r17, 0xE2	; 226
  72:	ab aa       	std	Y+51, r10	; 0x33
  74:	aa 2a       	or	r10, r26
  76:	be cd       	rjmp	.-1156   	; 0xfffffbf4 <__eeprom_end+0xff7efbf4>
  78:	cc cc       	rjmp	.-1640   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
  7a:	4c 3e       	cpi	r20, 0xEC	; 236
  7c:	00 00       	nop
  7e:	00 80       	ld	r0, Z
  80:	be ab       	std	Y+54, r27	; 0x36
  82:	aa aa       	std	Y+50, r10	; 0x32
  84:	aa 3e       	cpi	r26, 0xEA	; 234
  86:	00 00       	nop
  88:	00 00       	nop
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240
  90:	00 00       	nop
  92:	00 00       	nop
  94:	00 08       	sbc	r0, r0
  96:	41 78       	andi	r20, 0x81	; 129
  98:	d3 bb       	out	0x13, r29	; 19
  9a:	43 87       	std	Z+11, r20	; 0x0b
  9c:	d1 13       	cpse	r29, r17
  9e:	3d 19       	sub	r19, r13
  a0:	0e 3c       	cpi	r16, 0xCE	; 206
  a2:	c3 bd       	out	0x23, r28	; 35
  a4:	42 82       	std	Z+2, r4	; 0x02
  a6:	ad 2b       	or	r26, r29
  a8:	3e 68       	ori	r19, 0x8E	; 142
  aa:	ec 82       	std	Y+4, r14	; 0x04
  ac:	76 be       	out	0x36, r7	; 54
  ae:	d9 8f       	std	Y+25, r29	; 0x19
  b0:	e1 a9       	ldd	r30, Z+49	; 0x31
  b2:	3e 4c       	sbci	r19, 0xCE	; 206
  b4:	80 ef       	ldi	r24, 0xF0	; 240
  b6:	ff be       	out	0x3f, r15	; 63
  b8:	01 c4       	rjmp	.+2050   	; 0x8bc <__addsf3x+0x2e>
  ba:	ff 7f       	andi	r31, 0xFF	; 255
  bc:	3f 00       	.word	0x003f	; ????
  be:	00 00       	nop
	...

000000c2 <__ctors_end>:
  c2:	11 24       	eor	r1, r1
  c4:	1f be       	out	0x3f, r1	; 63
  c6:	cf ef       	ldi	r28, 0xFF	; 255
  c8:	d8 e0       	ldi	r29, 0x08	; 8
  ca:	de bf       	out	0x3e, r29	; 62
  cc:	cd bf       	out	0x3d, r28	; 61

000000ce <__do_copy_data>:
  ce:	11 e0       	ldi	r17, 0x01	; 1
  d0:	a0 e0       	ldi	r26, 0x00	; 0
  d2:	b1 e0       	ldi	r27, 0x01	; 1
  d4:	ee e6       	ldi	r30, 0x6E	; 110
  d6:	fc e0       	ldi	r31, 0x0C	; 12
  d8:	02 c0       	rjmp	.+4      	; 0xde <__do_copy_data+0x10>
  da:	05 90       	lpm	r0, Z+
  dc:	0d 92       	st	X+, r0
  de:	aa 31       	cpi	r26, 0x1A	; 26
  e0:	b1 07       	cpc	r27, r17
  e2:	d9 f7       	brne	.-10     	; 0xda <__do_copy_data+0xc>

000000e4 <__do_clear_bss>:
  e4:	21 e0       	ldi	r18, 0x01	; 1
  e6:	aa e1       	ldi	r26, 0x1A	; 26
  e8:	b1 e0       	ldi	r27, 0x01	; 1
  ea:	01 c0       	rjmp	.+2      	; 0xee <.do_clear_bss_start>

000000ec <.do_clear_bss_loop>:
  ec:	1d 92       	st	X+, r1

000000ee <.do_clear_bss_start>:
  ee:	a0 32       	cpi	r26, 0x20	; 32
  f0:	b2 07       	cpc	r27, r18
  f2:	e1 f7       	brne	.-8      	; 0xec <.do_clear_bss_loop>
  f4:	0e 94 e5 01 	call	0x3ca	; 0x3ca <main>
  f8:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <_exit>

000000fc <__bad_interrupt>:
  fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <int_to_charptr>:
}

void uart_writeln(char *c)
{
	uart_write(c);
	uart_write("\n");
 100:	ef 92       	push	r14
 102:	ff 92       	push	r15
 104:	0f 93       	push	r16
 106:	1f 93       	push	r17
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	ec 01       	movw	r28, r24
 10e:	00 97       	sbiw	r24, 0x00	; 0
 110:	b1 f1       	breq	.+108    	; 0x17e <int_to_charptr+0x7e>
 112:	d4 f5       	brge	.+116    	; 0x188 <int_to_charptr+0x88>
 114:	d1 95       	neg	r29
 116:	c1 95       	neg	r28
 118:	d1 09       	sbc	r29, r1
 11a:	be 01       	movw	r22, r28
 11c:	0d 2e       	mov	r0, r29
 11e:	00 0c       	add	r0, r0
 120:	88 0b       	sbc	r24, r24
 122:	99 0b       	sbc	r25, r25
 124:	0e 94 ba 02 	call	0x574	; 0x574 <__floatsisf>
 128:	0e 94 46 03 	call	0x68c	; 0x68c <log10>
 12c:	0e 94 82 02 	call	0x504	; 0x504 <__fixsfsi>
 130:	7b 01       	movw	r14, r22
 132:	cb 01       	movw	r24, r22
 134:	02 96       	adiw	r24, 0x02	; 2
 136:	0e 94 14 05 	call	0xa28	; 0xa28 <malloc>
 13a:	8c 01       	movw	r16, r24
 13c:	8d e2       	ldi	r24, 0x2D	; 45
 13e:	f8 01       	movw	r30, r16
 140:	80 83       	st	Z, r24
 142:	21 e0       	ldi	r18, 0x01	; 1
 144:	30 e0       	ldi	r19, 0x00	; 0
 146:	ff 20       	and	r15, r15
 148:	ec f0       	brlt	.+58     	; 0x184 <int_to_charptr+0x84>
 14a:	f7 01       	movw	r30, r14
 14c:	e2 0f       	add	r30, r18
 14e:	f3 1f       	adc	r31, r19
 150:	31 96       	adiw	r30, 0x01	; 1
 152:	e0 0f       	add	r30, r16
 154:	f1 1f       	adc	r31, r17
 156:	20 0f       	add	r18, r16
 158:	31 1f       	adc	r19, r17
 15a:	0f 2e       	mov	r0, r31
 15c:	fa e0       	ldi	r31, 0x0A	; 10
 15e:	ef 2e       	mov	r14, r31
 160:	f1 2c       	mov	r15, r1
 162:	f0 2d       	mov	r31, r0
 164:	ce 01       	movw	r24, r28
 166:	b7 01       	movw	r22, r14
 168:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__divmodhi4>
 16c:	80 5d       	subi	r24, 0xD0	; 208
 16e:	82 93       	st	-Z, r24
 170:	c6 2f       	mov	r28, r22
 172:	d7 2f       	mov	r29, r23
 174:	2e 17       	cp	r18, r30
 176:	3f 07       	cpc	r19, r31
 178:	a9 f7       	brne	.-22     	; 0x164 <int_to_charptr+0x64>
 17a:	c8 01       	movw	r24, r16
 17c:	18 c0       	rjmp	.+48     	; 0x1ae <int_to_charptr+0xae>
 17e:	88 e0       	ldi	r24, 0x08	; 8
 180:	91 e0       	ldi	r25, 0x01	; 1
 182:	15 c0       	rjmp	.+42     	; 0x1ae <int_to_charptr+0xae>
 184:	c8 01       	movw	r24, r16
 186:	13 c0       	rjmp	.+38     	; 0x1ae <int_to_charptr+0xae>
 188:	bc 01       	movw	r22, r24
 18a:	99 0f       	add	r25, r25
 18c:	88 0b       	sbc	r24, r24
 18e:	99 0b       	sbc	r25, r25
 190:	0e 94 ba 02 	call	0x574	; 0x574 <__floatsisf>
 194:	0e 94 46 03 	call	0x68c	; 0x68c <log10>
 198:	0e 94 82 02 	call	0x504	; 0x504 <__fixsfsi>
 19c:	7b 01       	movw	r14, r22
 19e:	cb 01       	movw	r24, r22
 1a0:	01 96       	adiw	r24, 0x01	; 1
 1a2:	0e 94 14 05 	call	0xa28	; 0xa28 <malloc>
 1a6:	8c 01       	movw	r16, r24
 1a8:	20 e0       	ldi	r18, 0x00	; 0
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	cc cf       	rjmp	.-104    	; 0x146 <int_to_charptr+0x46>
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	1f 91       	pop	r17
 1b4:	0f 91       	pop	r16
 1b6:	ff 90       	pop	r15
 1b8:	ef 90       	pop	r14
 1ba:	08 95       	ret

000001bc <uart_init>:
 1bc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 1c0:	87 e6       	ldi	r24, 0x67	; 103
 1c2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 1c6:	e0 ec       	ldi	r30, 0xC0	; 192
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	80 81       	ld	r24, Z
 1cc:	8d 7f       	andi	r24, 0xFD	; 253
 1ce:	80 83       	st	Z, r24
 1d0:	86 e0       	ldi	r24, 0x06	; 6
 1d2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 1d6:	88 e1       	ldi	r24, 0x18	; 24
 1d8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 1dc:	08 95       	ret

000001de <uart_putchar>:
 1de:	e0 ec       	ldi	r30, 0xC0	; 192
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	90 81       	ld	r25, Z
 1e4:	95 ff       	sbrs	r25, 5
 1e6:	fd cf       	rjmp	.-6      	; 0x1e2 <uart_putchar+0x4>
 1e8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 1ec:	08 95       	ret

000001ee <uart_write>:
 1ee:	cf 93       	push	r28
 1f0:	df 93       	push	r29
 1f2:	ec 01       	movw	r28, r24
 1f4:	88 81       	ld	r24, Y
 1f6:	88 23       	and	r24, r24
 1f8:	31 f0       	breq	.+12     	; 0x206 <uart_write+0x18>
 1fa:	21 96       	adiw	r28, 0x01	; 1
 1fc:	0e 94 ef 00 	call	0x1de	; 0x1de <uart_putchar>
 200:	89 91       	ld	r24, Y+
 202:	81 11       	cpse	r24, r1
 204:	fb cf       	rjmp	.-10     	; 0x1fc <uart_write+0xe>
 206:	df 91       	pop	r29
 208:	cf 91       	pop	r28
 20a:	08 95       	ret

0000020c <uart_writeNum>:
}

void uart_writeNum(int number)
{
	uart_write(int_to_charptr(number));
 20c:	0e 94 80 00 	call	0x100	; 0x100 <int_to_charptr>
 210:	0e 94 f7 00 	call	0x1ee	; 0x1ee <uart_write>
 214:	08 95       	ret

00000216 <uart_writeNumLn>:
}

void uart_writeNumLn(int number)
{
	uart_write(number);
 216:	0e 94 f7 00 	call	0x1ee	; 0x1ee <uart_write>
	uart_write("\n");
 21a:	8a e0       	ldi	r24, 0x0A	; 10
 21c:	91 e0       	ldi	r25, 0x01	; 1
 21e:	0e 94 f7 00 	call	0x1ee	; 0x1ee <uart_write>
 222:	08 95       	ret

00000224 <__vector_11>:
		_delay_ms(1000);
	}
}

ISR (TIMER1_COMPA_vect)
{
 224:	1f 92       	push	r1
 226:	0f 92       	push	r0
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	0f 92       	push	r0
 22c:	11 24       	eor	r1, r1
 22e:	8f 93       	push	r24
	OCR0A = OCR0A + 1;
 230:	87 b5       	in	r24, 0x27	; 39
 232:	8f 5f       	subi	r24, 0xFF	; 255
 234:	87 bd       	out	0x27, r24	; 39
}
 236:	8f 91       	pop	r24
 238:	0f 90       	pop	r0
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	0f 90       	pop	r0
 23e:	1f 90       	pop	r1
 240:	18 95       	reti

00000242 <left>:
}


void left()
{
	switch ((int)round((float)elapsed_from_0 / DELAY) % LED_COUNT)
 242:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <__data_end>
 246:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <__data_end+0x1>
 24a:	07 2e       	mov	r0, r23
 24c:	00 0c       	add	r0, r0
 24e:	88 0b       	sbc	r24, r24
 250:	99 0b       	sbc	r25, r25
 252:	0e 94 ba 02 	call	0x574	; 0x574 <__floatsisf>
 256:	20 e0       	ldi	r18, 0x00	; 0
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	48 e4       	ldi	r20, 0x48	; 72
 25c:	53 e4       	ldi	r21, 0x43	; 67
 25e:	0e 94 10 02 	call	0x420	; 0x420 <__divsf3>
 262:	0e 94 0b 04 	call	0x816	; 0x816 <round>
 266:	0e 94 82 02 	call	0x504	; 0x504 <__fixsfsi>
 26a:	cb 01       	movw	r24, r22
 26c:	65 e0       	ldi	r22, 0x05	; 5
 26e:	70 e0       	ldi	r23, 0x00	; 0
 270:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__divmodhi4>
 274:	82 30       	cpi	r24, 0x02	; 2
 276:	91 05       	cpc	r25, r1
 278:	b1 f0       	breq	.+44     	; 0x2a6 <left+0x64>
 27a:	2c f4       	brge	.+10     	; 0x286 <left+0x44>
 27c:	00 97       	sbiw	r24, 0x00	; 0
 27e:	49 f0       	breq	.+18     	; 0x292 <left+0x50>
 280:	01 97       	sbiw	r24, 0x01	; 1
 282:	61 f0       	breq	.+24     	; 0x29c <left+0x5a>
 284:	08 95       	ret
 286:	83 30       	cpi	r24, 0x03	; 3
 288:	91 05       	cpc	r25, r1
 28a:	91 f0       	breq	.+36     	; 0x2b0 <left+0x6e>
 28c:	04 97       	sbiw	r24, 0x04	; 4
 28e:	a9 f0       	breq	.+42     	; 0x2ba <left+0x78>
 290:	08 95       	ret
	{
		case 0:
		PORTD &= 0b10000011;
 292:	8b b1       	in	r24, 0x0b	; 11
 294:	83 78       	andi	r24, 0x83	; 131
 296:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00000100;
 298:	5a 9a       	sbi	0x0b, 2	; 11
		//elapsed_from_0 = clock();
		break;
 29a:	08 95       	ret
		case 1:
		PORTD &= 0b10000011;
 29c:	8b b1       	in	r24, 0x0b	; 11
 29e:	83 78       	andi	r24, 0x83	; 131
 2a0:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00001000;
 2a2:	5b 9a       	sbi	0x0b, 3	; 11
		break;
 2a4:	08 95       	ret
		case 2:
		PORTD &= 0b10000011;
 2a6:	8b b1       	in	r24, 0x0b	; 11
 2a8:	83 78       	andi	r24, 0x83	; 131
 2aa:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00010000;
 2ac:	5c 9a       	sbi	0x0b, 4	; 11
		break;
 2ae:	08 95       	ret
		case 3:
		PORTD &= 0b10000011;
 2b0:	8b b1       	in	r24, 0x0b	; 11
 2b2:	83 78       	andi	r24, 0x83	; 131
 2b4:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00100000;
 2b6:	5d 9a       	sbi	0x0b, 5	; 11
		break;
 2b8:	08 95       	ret
		case 4:
		PORTD &= 0b10000011;
 2ba:	8b b1       	in	r24, 0x0b	; 11
 2bc:	83 78       	andi	r24, 0x83	; 131
 2be:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b01000000;
 2c0:	5e 9a       	sbi	0x0b, 6	; 11
 2c2:	08 95       	ret

000002c4 <right>:
	//elapsed_time = clock();
}

void right()
{
	switch ((int)round((float)elapsed_from_0 / DELAY) % LED_COUNT)
 2c4:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <__data_end>
 2c8:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <__data_end+0x1>
 2cc:	07 2e       	mov	r0, r23
 2ce:	00 0c       	add	r0, r0
 2d0:	88 0b       	sbc	r24, r24
 2d2:	99 0b       	sbc	r25, r25
 2d4:	0e 94 ba 02 	call	0x574	; 0x574 <__floatsisf>
 2d8:	20 e0       	ldi	r18, 0x00	; 0
 2da:	30 e0       	ldi	r19, 0x00	; 0
 2dc:	48 e4       	ldi	r20, 0x48	; 72
 2de:	53 e4       	ldi	r21, 0x43	; 67
 2e0:	0e 94 10 02 	call	0x420	; 0x420 <__divsf3>
 2e4:	0e 94 0b 04 	call	0x816	; 0x816 <round>
 2e8:	0e 94 82 02 	call	0x504	; 0x504 <__fixsfsi>
 2ec:	cb 01       	movw	r24, r22
 2ee:	65 e0       	ldi	r22, 0x05	; 5
 2f0:	70 e0       	ldi	r23, 0x00	; 0
 2f2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__divmodhi4>
 2f6:	82 30       	cpi	r24, 0x02	; 2
 2f8:	91 05       	cpc	r25, r1
 2fa:	b1 f0       	breq	.+44     	; 0x328 <right+0x64>
 2fc:	2c f4       	brge	.+10     	; 0x308 <right+0x44>
 2fe:	00 97       	sbiw	r24, 0x00	; 0
 300:	49 f0       	breq	.+18     	; 0x314 <right+0x50>
 302:	01 97       	sbiw	r24, 0x01	; 1
 304:	61 f0       	breq	.+24     	; 0x31e <right+0x5a>
 306:	08 95       	ret
 308:	83 30       	cpi	r24, 0x03	; 3
 30a:	91 05       	cpc	r25, r1
 30c:	91 f0       	breq	.+36     	; 0x332 <right+0x6e>
 30e:	04 97       	sbiw	r24, 0x04	; 4
 310:	a9 f0       	breq	.+42     	; 0x33c <right+0x78>
 312:	08 95       	ret
	{
		case 0:
		PORTD &= 0b10000011;
 314:	8b b1       	in	r24, 0x0b	; 11
 316:	83 78       	andi	r24, 0x83	; 131
 318:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b01000000;
 31a:	5e 9a       	sbi	0x0b, 6	; 11
		//elapsed_from_0 = clock();
		break;
 31c:	08 95       	ret
		case 1:
		PORTD &= 0b10000011;
 31e:	8b b1       	in	r24, 0x0b	; 11
 320:	83 78       	andi	r24, 0x83	; 131
 322:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00100000;
 324:	5d 9a       	sbi	0x0b, 5	; 11
		break;
 326:	08 95       	ret
		case 2:
		PORTD &= 0b10000011;
 328:	8b b1       	in	r24, 0x0b	; 11
 32a:	83 78       	andi	r24, 0x83	; 131
 32c:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00010000;
 32e:	5c 9a       	sbi	0x0b, 4	; 11
		break;
 330:	08 95       	ret
		case 3:
		PORTD &= 0b10000011;
 332:	8b b1       	in	r24, 0x0b	; 11
 334:	83 78       	andi	r24, 0x83	; 131
 336:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00001000;
 338:	5b 9a       	sbi	0x0b, 3	; 11
		break;
 33a:	08 95       	ret
		case 4:
		PORTD &= 0b10000011;
 33c:	8b b1       	in	r24, 0x0b	; 11
 33e:	83 78       	andi	r24, 0x83	; 131
 340:	8b b9       	out	0x0b, r24	; 11
		PORTD |= 0b00000100;
 342:	5a 9a       	sbi	0x0b, 2	; 11
 344:	08 95       	ret

00000346 <loop>:
{
	OCR0A = OCR0A + 1;
}

void loop()
{
 346:	0f 93       	push	r16
 348:	1f 93       	push	r17
 34a:	cf 93       	push	r28
	int SW_state = PINB & 0b000011;
 34c:	c3 b1       	in	r28, 0x03	; 3
 34e:	c3 70       	andi	r28, 0x03	; 3
 350:	0c 2f       	mov	r16, r28
 352:	10 e0       	ldi	r17, 0x00	; 0
	uart_write("SW1:\t");
 354:	8c e0       	ldi	r24, 0x0C	; 12
 356:	91 e0       	ldi	r25, 0x01	; 1
 358:	0e 94 f7 00 	call	0x1ee	; 0x1ee <uart_write>
	uart_writeNum(SW_state % 0b10); // Desni bit
 35c:	c8 01       	movw	r24, r16
 35e:	81 70       	andi	r24, 0x01	; 1
 360:	90 78       	andi	r25, 0x80	; 128
 362:	0e 94 06 01 	call	0x20c	; 0x20c <uart_writeNum>
	uart_write("\tSW2:\t");
 366:	82 e1       	ldi	r24, 0x12	; 18
 368:	91 e0       	ldi	r25, 0x01	; 1
 36a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <uart_write>
	uart_writeNumLn(SW_state / 0b10); // Lijevi bit
 36e:	c8 01       	movw	r24, r16
 370:	95 95       	asr	r25
 372:	87 95       	ror	r24
 374:	0e 94 0b 01 	call	0x216	; 0x216 <uart_writeNumLn>
	
	if (SW_state != prev_SW_state)
 378:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <prev_SW_state>
 37c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <prev_SW_state+0x1>
 380:	08 17       	cp	r16, r24
 382:	19 07       	cpc	r17, r25
 384:	59 f0       	breq	.+22     	; 0x39c <loop+0x56>
	{
		prev_SW_state = SW_state;
 386:	10 93 07 01 	sts	0x0107, r17	; 0x800107 <prev_SW_state+0x1>
 38a:	00 93 06 01 	sts	0x0106, r16	; 0x800106 <prev_SW_state>
		PORTD &= 0b10000011;
 38e:	8b b1       	in	r24, 0x0b	; 11
 390:	83 78       	andi	r24, 0x83	; 131
 392:	8b b9       	out	0x0b, r24	; 11
		elapsed_from_0 = 0;
 394:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <__data_end+0x1>
 398:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__data_end>
	}
	
	switch (SW_state)
 39c:	c1 30       	cpi	r28, 0x01	; 1
 39e:	31 f0       	breq	.+12     	; 0x3ac <loop+0x66>
 3a0:	58 f0       	brcs	.+22     	; 0x3b8 <loop+0x72>
 3a2:	c2 30       	cpi	r28, 0x02	; 2
 3a4:	31 f0       	breq	.+12     	; 0x3b2 <loop+0x6c>
 3a6:	c3 30       	cpi	r28, 0x03	; 3
 3a8:	59 f0       	breq	.+22     	; 0x3c0 <loop+0x7a>
 3aa:	0b c0       	rjmp	.+22     	; 0x3c2 <loop+0x7c>
	{
		case 0b01:
		right();
 3ac:	0e 94 62 01 	call	0x2c4	; 0x2c4 <right>
		break;
 3b0:	08 c0       	rjmp	.+16     	; 0x3c2 <loop+0x7c>
		case 0b10:
		left();
 3b2:	0e 94 21 01 	call	0x242	; 0x242 <left>
		break;
 3b6:	05 c0       	rjmp	.+10     	; 0x3c2 <loop+0x7c>
		case 0b00:
		PORTD |= 0b01111100;
 3b8:	8b b1       	in	r24, 0x0b	; 11
 3ba:	8c 67       	ori	r24, 0x7C	; 124
 3bc:	8b b9       	out	0x0b, r24	; 11
		break;
 3be:	01 c0       	rjmp	.+2      	; 0x3c2 <loop+0x7c>
		case 0b11:
		PORTD |= 0b00010000;
 3c0:	5c 9a       	sbi	0x0b, 4	; 11
		break;
		default: break;
	}
}
 3c2:	cf 91       	pop	r28
 3c4:	1f 91       	pop	r17
 3c6:	0f 91       	pop	r16
 3c8:	08 95       	ret

000003ca <main>:
int main(void)
{
	// Tipkala
	//pinMode(8, INPUT_PULLUP);
	//pinMode(9, INPUT_PULLUP);
	DDRB &= 0b111100;
 3ca:	84 b1       	in	r24, 0x04	; 4
 3cc:	8c 73       	andi	r24, 0x3C	; 60
 3ce:	84 b9       	out	0x04, r24	; 4
	PORTB |= 0b000011;
 3d0:	85 b1       	in	r24, 0x05	; 5
 3d2:	83 60       	ori	r24, 0x03	; 3
 3d4:	85 b9       	out	0x05, r24	; 5
	
	// LED-ice
	//pinMode(2, OUTPUT);
	//...
	//pinMode(6, OUTPUT);
	DDRD |= 0b01111100;
 3d6:	8a b1       	in	r24, 0x0a	; 10
 3d8:	8c 67       	ori	r24, 0x7C	; 124
 3da:	8a b9       	out	0x0a, r24	; 10
	
	//Serial.begin(9600);
	uart_init();
 3dc:	0e 94 de 00 	call	0x1bc	; 0x1bc <uart_init>
	
	ICR1 = 0x30D3;
 3e0:	83 ed       	ldi	r24, 0xD3	; 211
 3e2:	90 e3       	ldi	r25, 0x30	; 48
 3e4:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 3e8:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
	
	TCCR1B |= (1 << WGM12);
 3ec:	e1 e8       	ldi	r30, 0x81	; 129
 3ee:	f0 e0       	ldi	r31, 0x00	; 0
 3f0:	80 81       	ld	r24, Z
 3f2:	88 60       	ori	r24, 0x08	; 8
 3f4:	80 83       	st	Z, r24
	
	TIMSK1 |= (1 << OCIE1A);
 3f6:	af e6       	ldi	r26, 0x6F	; 111
 3f8:	b0 e0       	ldi	r27, 0x00	; 0
 3fa:	8c 91       	ld	r24, X
 3fc:	82 60       	ori	r24, 0x02	; 2
 3fe:	8c 93       	st	X, r24
	
	TCCR1B |= (1 << CS12);
 400:	80 81       	ld	r24, Z
 402:	84 60       	ori	r24, 0x04	; 4
 404:	80 83       	st	Z, r24
	
	sei();
 406:	78 94       	sei
	
	while (1)
	{
		loop();
 408:	0e 94 a3 01 	call	0x346	; 0x346 <loop>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 40c:	2f e3       	ldi	r18, 0x3F	; 63
 40e:	8d e0       	ldi	r24, 0x0D	; 13
 410:	93 e0       	ldi	r25, 0x03	; 3
 412:	21 50       	subi	r18, 0x01	; 1
 414:	80 40       	sbci	r24, 0x00	; 0
 416:	90 40       	sbci	r25, 0x00	; 0
 418:	e1 f7       	brne	.-8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 41a:	00 c0       	rjmp	.+0      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 41c:	00 00       	nop
 41e:	f4 cf       	rjmp	.-24     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>

00000420 <__divsf3>:
 420:	0e 94 24 02 	call	0x448	; 0x448 <__divsf3x>
 424:	0c 94 0c 03 	jmp	0x618	; 0x618 <__fp_round>
 428:	0e 94 05 03 	call	0x60a	; 0x60a <__fp_pscB>
 42c:	58 f0       	brcs	.+22     	; 0x444 <__divsf3+0x24>
 42e:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_pscA>
 432:	40 f0       	brcs	.+16     	; 0x444 <__divsf3+0x24>
 434:	29 f4       	brne	.+10     	; 0x440 <__divsf3+0x20>
 436:	5f 3f       	cpi	r21, 0xFF	; 255
 438:	29 f0       	breq	.+10     	; 0x444 <__divsf3+0x24>
 43a:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_inf>
 43e:	51 11       	cpse	r21, r1
 440:	0c 94 40 03 	jmp	0x680	; 0x680 <__fp_szero>
 444:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_nan>

00000448 <__divsf3x>:
 448:	0e 94 1d 03 	call	0x63a	; 0x63a <__fp_split3>
 44c:	68 f3       	brcs	.-38     	; 0x428 <__divsf3+0x8>

0000044e <__divsf3_pse>:
 44e:	99 23       	and	r25, r25
 450:	b1 f3       	breq	.-20     	; 0x43e <__divsf3+0x1e>
 452:	55 23       	and	r21, r21
 454:	91 f3       	breq	.-28     	; 0x43a <__divsf3+0x1a>
 456:	95 1b       	sub	r25, r21
 458:	55 0b       	sbc	r21, r21
 45a:	bb 27       	eor	r27, r27
 45c:	aa 27       	eor	r26, r26
 45e:	62 17       	cp	r22, r18
 460:	73 07       	cpc	r23, r19
 462:	84 07       	cpc	r24, r20
 464:	38 f0       	brcs	.+14     	; 0x474 <__divsf3_pse+0x26>
 466:	9f 5f       	subi	r25, 0xFF	; 255
 468:	5f 4f       	sbci	r21, 0xFF	; 255
 46a:	22 0f       	add	r18, r18
 46c:	33 1f       	adc	r19, r19
 46e:	44 1f       	adc	r20, r20
 470:	aa 1f       	adc	r26, r26
 472:	a9 f3       	breq	.-22     	; 0x45e <__divsf3_pse+0x10>
 474:	35 d0       	rcall	.+106    	; 0x4e0 <__divsf3_pse+0x92>
 476:	0e 2e       	mov	r0, r30
 478:	3a f0       	brmi	.+14     	; 0x488 <__divsf3_pse+0x3a>
 47a:	e0 e8       	ldi	r30, 0x80	; 128
 47c:	32 d0       	rcall	.+100    	; 0x4e2 <__divsf3_pse+0x94>
 47e:	91 50       	subi	r25, 0x01	; 1
 480:	50 40       	sbci	r21, 0x00	; 0
 482:	e6 95       	lsr	r30
 484:	00 1c       	adc	r0, r0
 486:	ca f7       	brpl	.-14     	; 0x47a <__divsf3_pse+0x2c>
 488:	2b d0       	rcall	.+86     	; 0x4e0 <__divsf3_pse+0x92>
 48a:	fe 2f       	mov	r31, r30
 48c:	29 d0       	rcall	.+82     	; 0x4e0 <__divsf3_pse+0x92>
 48e:	66 0f       	add	r22, r22
 490:	77 1f       	adc	r23, r23
 492:	88 1f       	adc	r24, r24
 494:	bb 1f       	adc	r27, r27
 496:	26 17       	cp	r18, r22
 498:	37 07       	cpc	r19, r23
 49a:	48 07       	cpc	r20, r24
 49c:	ab 07       	cpc	r26, r27
 49e:	b0 e8       	ldi	r27, 0x80	; 128
 4a0:	09 f0       	breq	.+2      	; 0x4a4 <__divsf3_pse+0x56>
 4a2:	bb 0b       	sbc	r27, r27
 4a4:	80 2d       	mov	r24, r0
 4a6:	bf 01       	movw	r22, r30
 4a8:	ff 27       	eor	r31, r31
 4aa:	93 58       	subi	r25, 0x83	; 131
 4ac:	5f 4f       	sbci	r21, 0xFF	; 255
 4ae:	3a f0       	brmi	.+14     	; 0x4be <__divsf3_pse+0x70>
 4b0:	9e 3f       	cpi	r25, 0xFE	; 254
 4b2:	51 05       	cpc	r21, r1
 4b4:	78 f0       	brcs	.+30     	; 0x4d4 <__divsf3_pse+0x86>
 4b6:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_inf>
 4ba:	0c 94 40 03 	jmp	0x680	; 0x680 <__fp_szero>
 4be:	5f 3f       	cpi	r21, 0xFF	; 255
 4c0:	e4 f3       	brlt	.-8      	; 0x4ba <__divsf3_pse+0x6c>
 4c2:	98 3e       	cpi	r25, 0xE8	; 232
 4c4:	d4 f3       	brlt	.-12     	; 0x4ba <__divsf3_pse+0x6c>
 4c6:	86 95       	lsr	r24
 4c8:	77 95       	ror	r23
 4ca:	67 95       	ror	r22
 4cc:	b7 95       	ror	r27
 4ce:	f7 95       	ror	r31
 4d0:	9f 5f       	subi	r25, 0xFF	; 255
 4d2:	c9 f7       	brne	.-14     	; 0x4c6 <__divsf3_pse+0x78>
 4d4:	88 0f       	add	r24, r24
 4d6:	91 1d       	adc	r25, r1
 4d8:	96 95       	lsr	r25
 4da:	87 95       	ror	r24
 4dc:	97 f9       	bld	r25, 7
 4de:	08 95       	ret
 4e0:	e1 e0       	ldi	r30, 0x01	; 1
 4e2:	66 0f       	add	r22, r22
 4e4:	77 1f       	adc	r23, r23
 4e6:	88 1f       	adc	r24, r24
 4e8:	bb 1f       	adc	r27, r27
 4ea:	62 17       	cp	r22, r18
 4ec:	73 07       	cpc	r23, r19
 4ee:	84 07       	cpc	r24, r20
 4f0:	ba 07       	cpc	r27, r26
 4f2:	20 f0       	brcs	.+8      	; 0x4fc <__divsf3_pse+0xae>
 4f4:	62 1b       	sub	r22, r18
 4f6:	73 0b       	sbc	r23, r19
 4f8:	84 0b       	sbc	r24, r20
 4fa:	ba 0b       	sbc	r27, r26
 4fc:	ee 1f       	adc	r30, r30
 4fe:	88 f7       	brcc	.-30     	; 0x4e2 <__divsf3_pse+0x94>
 500:	e0 95       	com	r30
 502:	08 95       	ret

00000504 <__fixsfsi>:
 504:	0e 94 89 02 	call	0x512	; 0x512 <__fixunssfsi>
 508:	68 94       	set
 50a:	b1 11       	cpse	r27, r1
 50c:	0c 94 40 03 	jmp	0x680	; 0x680 <__fp_szero>
 510:	08 95       	ret

00000512 <__fixunssfsi>:
 512:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_splitA>
 516:	88 f0       	brcs	.+34     	; 0x53a <__fixunssfsi+0x28>
 518:	9f 57       	subi	r25, 0x7F	; 127
 51a:	98 f0       	brcs	.+38     	; 0x542 <__fixunssfsi+0x30>
 51c:	b9 2f       	mov	r27, r25
 51e:	99 27       	eor	r25, r25
 520:	b7 51       	subi	r27, 0x17	; 23
 522:	b0 f0       	brcs	.+44     	; 0x550 <__fixunssfsi+0x3e>
 524:	e1 f0       	breq	.+56     	; 0x55e <__fixunssfsi+0x4c>
 526:	66 0f       	add	r22, r22
 528:	77 1f       	adc	r23, r23
 52a:	88 1f       	adc	r24, r24
 52c:	99 1f       	adc	r25, r25
 52e:	1a f0       	brmi	.+6      	; 0x536 <__fixunssfsi+0x24>
 530:	ba 95       	dec	r27
 532:	c9 f7       	brne	.-14     	; 0x526 <__fixunssfsi+0x14>
 534:	14 c0       	rjmp	.+40     	; 0x55e <__fixunssfsi+0x4c>
 536:	b1 30       	cpi	r27, 0x01	; 1
 538:	91 f0       	breq	.+36     	; 0x55e <__fixunssfsi+0x4c>
 53a:	0e 94 3f 03 	call	0x67e	; 0x67e <__fp_zero>
 53e:	b1 e0       	ldi	r27, 0x01	; 1
 540:	08 95       	ret
 542:	0c 94 3f 03 	jmp	0x67e	; 0x67e <__fp_zero>
 546:	67 2f       	mov	r22, r23
 548:	78 2f       	mov	r23, r24
 54a:	88 27       	eor	r24, r24
 54c:	b8 5f       	subi	r27, 0xF8	; 248
 54e:	39 f0       	breq	.+14     	; 0x55e <__fixunssfsi+0x4c>
 550:	b9 3f       	cpi	r27, 0xF9	; 249
 552:	cc f3       	brlt	.-14     	; 0x546 <__fixunssfsi+0x34>
 554:	86 95       	lsr	r24
 556:	77 95       	ror	r23
 558:	67 95       	ror	r22
 55a:	b3 95       	inc	r27
 55c:	d9 f7       	brne	.-10     	; 0x554 <__fixunssfsi+0x42>
 55e:	3e f4       	brtc	.+14     	; 0x56e <__fixunssfsi+0x5c>
 560:	90 95       	com	r25
 562:	80 95       	com	r24
 564:	70 95       	com	r23
 566:	61 95       	neg	r22
 568:	7f 4f       	sbci	r23, 0xFF	; 255
 56a:	8f 4f       	sbci	r24, 0xFF	; 255
 56c:	9f 4f       	sbci	r25, 0xFF	; 255
 56e:	08 95       	ret

00000570 <__floatunsisf>:
 570:	e8 94       	clt
 572:	09 c0       	rjmp	.+18     	; 0x586 <__floatsisf+0x12>

00000574 <__floatsisf>:
 574:	97 fb       	bst	r25, 7
 576:	3e f4       	brtc	.+14     	; 0x586 <__floatsisf+0x12>
 578:	90 95       	com	r25
 57a:	80 95       	com	r24
 57c:	70 95       	com	r23
 57e:	61 95       	neg	r22
 580:	7f 4f       	sbci	r23, 0xFF	; 255
 582:	8f 4f       	sbci	r24, 0xFF	; 255
 584:	9f 4f       	sbci	r25, 0xFF	; 255
 586:	99 23       	and	r25, r25
 588:	a9 f0       	breq	.+42     	; 0x5b4 <__floatsisf+0x40>
 58a:	f9 2f       	mov	r31, r25
 58c:	96 e9       	ldi	r25, 0x96	; 150
 58e:	bb 27       	eor	r27, r27
 590:	93 95       	inc	r25
 592:	f6 95       	lsr	r31
 594:	87 95       	ror	r24
 596:	77 95       	ror	r23
 598:	67 95       	ror	r22
 59a:	b7 95       	ror	r27
 59c:	f1 11       	cpse	r31, r1
 59e:	f8 cf       	rjmp	.-16     	; 0x590 <__floatsisf+0x1c>
 5a0:	fa f4       	brpl	.+62     	; 0x5e0 <__floatsisf+0x6c>
 5a2:	bb 0f       	add	r27, r27
 5a4:	11 f4       	brne	.+4      	; 0x5aa <__floatsisf+0x36>
 5a6:	60 ff       	sbrs	r22, 0
 5a8:	1b c0       	rjmp	.+54     	; 0x5e0 <__floatsisf+0x6c>
 5aa:	6f 5f       	subi	r22, 0xFF	; 255
 5ac:	7f 4f       	sbci	r23, 0xFF	; 255
 5ae:	8f 4f       	sbci	r24, 0xFF	; 255
 5b0:	9f 4f       	sbci	r25, 0xFF	; 255
 5b2:	16 c0       	rjmp	.+44     	; 0x5e0 <__floatsisf+0x6c>
 5b4:	88 23       	and	r24, r24
 5b6:	11 f0       	breq	.+4      	; 0x5bc <__floatsisf+0x48>
 5b8:	96 e9       	ldi	r25, 0x96	; 150
 5ba:	11 c0       	rjmp	.+34     	; 0x5de <__floatsisf+0x6a>
 5bc:	77 23       	and	r23, r23
 5be:	21 f0       	breq	.+8      	; 0x5c8 <__floatsisf+0x54>
 5c0:	9e e8       	ldi	r25, 0x8E	; 142
 5c2:	87 2f       	mov	r24, r23
 5c4:	76 2f       	mov	r23, r22
 5c6:	05 c0       	rjmp	.+10     	; 0x5d2 <__floatsisf+0x5e>
 5c8:	66 23       	and	r22, r22
 5ca:	71 f0       	breq	.+28     	; 0x5e8 <__floatsisf+0x74>
 5cc:	96 e8       	ldi	r25, 0x86	; 134
 5ce:	86 2f       	mov	r24, r22
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	60 e0       	ldi	r22, 0x00	; 0
 5d4:	2a f0       	brmi	.+10     	; 0x5e0 <__floatsisf+0x6c>
 5d6:	9a 95       	dec	r25
 5d8:	66 0f       	add	r22, r22
 5da:	77 1f       	adc	r23, r23
 5dc:	88 1f       	adc	r24, r24
 5de:	da f7       	brpl	.-10     	; 0x5d6 <__floatsisf+0x62>
 5e0:	88 0f       	add	r24, r24
 5e2:	96 95       	lsr	r25
 5e4:	87 95       	ror	r24
 5e6:	97 f9       	bld	r25, 7
 5e8:	08 95       	ret

000005ea <__fp_inf>:
 5ea:	97 f9       	bld	r25, 7
 5ec:	9f 67       	ori	r25, 0x7F	; 127
 5ee:	80 e8       	ldi	r24, 0x80	; 128
 5f0:	70 e0       	ldi	r23, 0x00	; 0
 5f2:	60 e0       	ldi	r22, 0x00	; 0
 5f4:	08 95       	ret

000005f6 <__fp_nan>:
 5f6:	9f ef       	ldi	r25, 0xFF	; 255
 5f8:	80 ec       	ldi	r24, 0xC0	; 192
 5fa:	08 95       	ret

000005fc <__fp_pscA>:
 5fc:	00 24       	eor	r0, r0
 5fe:	0a 94       	dec	r0
 600:	16 16       	cp	r1, r22
 602:	17 06       	cpc	r1, r23
 604:	18 06       	cpc	r1, r24
 606:	09 06       	cpc	r0, r25
 608:	08 95       	ret

0000060a <__fp_pscB>:
 60a:	00 24       	eor	r0, r0
 60c:	0a 94       	dec	r0
 60e:	12 16       	cp	r1, r18
 610:	13 06       	cpc	r1, r19
 612:	14 06       	cpc	r1, r20
 614:	05 06       	cpc	r0, r21
 616:	08 95       	ret

00000618 <__fp_round>:
 618:	09 2e       	mov	r0, r25
 61a:	03 94       	inc	r0
 61c:	00 0c       	add	r0, r0
 61e:	11 f4       	brne	.+4      	; 0x624 <__fp_round+0xc>
 620:	88 23       	and	r24, r24
 622:	52 f0       	brmi	.+20     	; 0x638 <__fp_round+0x20>
 624:	bb 0f       	add	r27, r27
 626:	40 f4       	brcc	.+16     	; 0x638 <__fp_round+0x20>
 628:	bf 2b       	or	r27, r31
 62a:	11 f4       	brne	.+4      	; 0x630 <__fp_round+0x18>
 62c:	60 ff       	sbrs	r22, 0
 62e:	04 c0       	rjmp	.+8      	; 0x638 <__fp_round+0x20>
 630:	6f 5f       	subi	r22, 0xFF	; 255
 632:	7f 4f       	sbci	r23, 0xFF	; 255
 634:	8f 4f       	sbci	r24, 0xFF	; 255
 636:	9f 4f       	sbci	r25, 0xFF	; 255
 638:	08 95       	ret

0000063a <__fp_split3>:
 63a:	57 fd       	sbrc	r21, 7
 63c:	90 58       	subi	r25, 0x80	; 128
 63e:	44 0f       	add	r20, r20
 640:	55 1f       	adc	r21, r21
 642:	59 f0       	breq	.+22     	; 0x65a <__fp_splitA+0x10>
 644:	5f 3f       	cpi	r21, 0xFF	; 255
 646:	71 f0       	breq	.+28     	; 0x664 <__fp_splitA+0x1a>
 648:	47 95       	ror	r20

0000064a <__fp_splitA>:
 64a:	88 0f       	add	r24, r24
 64c:	97 fb       	bst	r25, 7
 64e:	99 1f       	adc	r25, r25
 650:	61 f0       	breq	.+24     	; 0x66a <__fp_splitA+0x20>
 652:	9f 3f       	cpi	r25, 0xFF	; 255
 654:	79 f0       	breq	.+30     	; 0x674 <__fp_splitA+0x2a>
 656:	87 95       	ror	r24
 658:	08 95       	ret
 65a:	12 16       	cp	r1, r18
 65c:	13 06       	cpc	r1, r19
 65e:	14 06       	cpc	r1, r20
 660:	55 1f       	adc	r21, r21
 662:	f2 cf       	rjmp	.-28     	; 0x648 <__fp_split3+0xe>
 664:	46 95       	lsr	r20
 666:	f1 df       	rcall	.-30     	; 0x64a <__fp_splitA>
 668:	08 c0       	rjmp	.+16     	; 0x67a <__fp_splitA+0x30>
 66a:	16 16       	cp	r1, r22
 66c:	17 06       	cpc	r1, r23
 66e:	18 06       	cpc	r1, r24
 670:	99 1f       	adc	r25, r25
 672:	f1 cf       	rjmp	.-30     	; 0x656 <__fp_splitA+0xc>
 674:	86 95       	lsr	r24
 676:	71 05       	cpc	r23, r1
 678:	61 05       	cpc	r22, r1
 67a:	08 94       	sec
 67c:	08 95       	ret

0000067e <__fp_zero>:
 67e:	e8 94       	clt

00000680 <__fp_szero>:
 680:	bb 27       	eor	r27, r27
 682:	66 27       	eor	r22, r22
 684:	77 27       	eor	r23, r23
 686:	cb 01       	movw	r24, r22
 688:	97 f9       	bld	r25, 7
 68a:	08 95       	ret

0000068c <log10>:
 68c:	0e 94 56 03 	call	0x6ac	; 0x6ac <log>
 690:	29 ed       	ldi	r18, 0xD9	; 217
 692:	3b e5       	ldi	r19, 0x5B	; 91
 694:	4e ed       	ldi	r20, 0xDE	; 222
 696:	5e e3       	ldi	r21, 0x3E	; 62
 698:	0c 94 9e 03 	jmp	0x73c	; 0x73c <__mulsf3>
 69c:	16 f0       	brts	.+4      	; 0x6a2 <log10+0x16>
 69e:	0c 94 b7 04 	jmp	0x96e	; 0x96e <__fp_mpack>
 6a2:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_nan>
 6a6:	68 94       	set
 6a8:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_inf>

000006ac <log>:
 6ac:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_splitA>
 6b0:	a8 f3       	brcs	.-22     	; 0x69c <log10+0x10>
 6b2:	99 23       	and	r25, r25
 6b4:	c1 f3       	breq	.-16     	; 0x6a6 <log10+0x1a>
 6b6:	ae f3       	brts	.-22     	; 0x6a2 <log10+0x16>
 6b8:	df 93       	push	r29
 6ba:	cf 93       	push	r28
 6bc:	1f 93       	push	r17
 6be:	0f 93       	push	r16
 6c0:	ff 92       	push	r15
 6c2:	c9 2f       	mov	r28, r25
 6c4:	dd 27       	eor	r29, r29
 6c6:	88 23       	and	r24, r24
 6c8:	2a f0       	brmi	.+10     	; 0x6d4 <log+0x28>
 6ca:	21 97       	sbiw	r28, 0x01	; 1
 6cc:	66 0f       	add	r22, r22
 6ce:	77 1f       	adc	r23, r23
 6d0:	88 1f       	adc	r24, r24
 6d2:	da f7       	brpl	.-10     	; 0x6ca <log+0x1e>
 6d4:	20 e0       	ldi	r18, 0x00	; 0
 6d6:	30 e0       	ldi	r19, 0x00	; 0
 6d8:	40 e8       	ldi	r20, 0x80	; 128
 6da:	5f eb       	ldi	r21, 0xBF	; 191
 6dc:	9f e3       	ldi	r25, 0x3F	; 63
 6de:	88 39       	cpi	r24, 0x98	; 152
 6e0:	20 f0       	brcs	.+8      	; 0x6ea <log+0x3e>
 6e2:	80 3e       	cpi	r24, 0xE0	; 224
 6e4:	38 f0       	brcs	.+14     	; 0x6f4 <log+0x48>
 6e6:	21 96       	adiw	r28, 0x01	; 1
 6e8:	8f 77       	andi	r24, 0x7F	; 127
 6ea:	0e 94 30 04 	call	0x860	; 0x860 <__addsf3>
 6ee:	e8 e6       	ldi	r30, 0x68	; 104
 6f0:	f0 e0       	ldi	r31, 0x00	; 0
 6f2:	04 c0       	rjmp	.+8      	; 0x6fc <log+0x50>
 6f4:	0e 94 30 04 	call	0x860	; 0x860 <__addsf3>
 6f8:	e5 e9       	ldi	r30, 0x95	; 149
 6fa:	f0 e0       	ldi	r31, 0x00	; 0
 6fc:	0e 94 c5 04 	call	0x98a	; 0x98a <__fp_powser>
 700:	8b 01       	movw	r16, r22
 702:	be 01       	movw	r22, r28
 704:	ec 01       	movw	r28, r24
 706:	fb 2e       	mov	r15, r27
 708:	6f 57       	subi	r22, 0x7F	; 127
 70a:	71 09       	sbc	r23, r1
 70c:	75 95       	asr	r23
 70e:	77 1f       	adc	r23, r23
 710:	88 0b       	sbc	r24, r24
 712:	99 0b       	sbc	r25, r25
 714:	0e 94 ba 02 	call	0x574	; 0x574 <__floatsisf>
 718:	28 e1       	ldi	r18, 0x18	; 24
 71a:	32 e7       	ldi	r19, 0x72	; 114
 71c:	41 e3       	ldi	r20, 0x31	; 49
 71e:	5f e3       	ldi	r21, 0x3F	; 63
 720:	0e 94 b1 03 	call	0x762	; 0x762 <__mulsf3x>
 724:	af 2d       	mov	r26, r15
 726:	98 01       	movw	r18, r16
 728:	ae 01       	movw	r20, r28
 72a:	ff 90       	pop	r15
 72c:	0f 91       	pop	r16
 72e:	1f 91       	pop	r17
 730:	cf 91       	pop	r28
 732:	df 91       	pop	r29
 734:	0e 94 47 04 	call	0x88e	; 0x88e <__addsf3x>
 738:	0c 94 0c 03 	jmp	0x618	; 0x618 <__fp_round>

0000073c <__mulsf3>:
 73c:	0e 94 b1 03 	call	0x762	; 0x762 <__mulsf3x>
 740:	0c 94 0c 03 	jmp	0x618	; 0x618 <__fp_round>
 744:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_pscA>
 748:	38 f0       	brcs	.+14     	; 0x758 <__mulsf3+0x1c>
 74a:	0e 94 05 03 	call	0x60a	; 0x60a <__fp_pscB>
 74e:	20 f0       	brcs	.+8      	; 0x758 <__mulsf3+0x1c>
 750:	95 23       	and	r25, r21
 752:	11 f0       	breq	.+4      	; 0x758 <__mulsf3+0x1c>
 754:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_inf>
 758:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_nan>
 75c:	11 24       	eor	r1, r1
 75e:	0c 94 40 03 	jmp	0x680	; 0x680 <__fp_szero>

00000762 <__mulsf3x>:
 762:	0e 94 1d 03 	call	0x63a	; 0x63a <__fp_split3>
 766:	70 f3       	brcs	.-36     	; 0x744 <__mulsf3+0x8>

00000768 <__mulsf3_pse>:
 768:	95 9f       	mul	r25, r21
 76a:	c1 f3       	breq	.-16     	; 0x75c <__mulsf3+0x20>
 76c:	95 0f       	add	r25, r21
 76e:	50 e0       	ldi	r21, 0x00	; 0
 770:	55 1f       	adc	r21, r21
 772:	62 9f       	mul	r22, r18
 774:	f0 01       	movw	r30, r0
 776:	72 9f       	mul	r23, r18
 778:	bb 27       	eor	r27, r27
 77a:	f0 0d       	add	r31, r0
 77c:	b1 1d       	adc	r27, r1
 77e:	63 9f       	mul	r22, r19
 780:	aa 27       	eor	r26, r26
 782:	f0 0d       	add	r31, r0
 784:	b1 1d       	adc	r27, r1
 786:	aa 1f       	adc	r26, r26
 788:	64 9f       	mul	r22, r20
 78a:	66 27       	eor	r22, r22
 78c:	b0 0d       	add	r27, r0
 78e:	a1 1d       	adc	r26, r1
 790:	66 1f       	adc	r22, r22
 792:	82 9f       	mul	r24, r18
 794:	22 27       	eor	r18, r18
 796:	b0 0d       	add	r27, r0
 798:	a1 1d       	adc	r26, r1
 79a:	62 1f       	adc	r22, r18
 79c:	73 9f       	mul	r23, r19
 79e:	b0 0d       	add	r27, r0
 7a0:	a1 1d       	adc	r26, r1
 7a2:	62 1f       	adc	r22, r18
 7a4:	83 9f       	mul	r24, r19
 7a6:	a0 0d       	add	r26, r0
 7a8:	61 1d       	adc	r22, r1
 7aa:	22 1f       	adc	r18, r18
 7ac:	74 9f       	mul	r23, r20
 7ae:	33 27       	eor	r19, r19
 7b0:	a0 0d       	add	r26, r0
 7b2:	61 1d       	adc	r22, r1
 7b4:	23 1f       	adc	r18, r19
 7b6:	84 9f       	mul	r24, r20
 7b8:	60 0d       	add	r22, r0
 7ba:	21 1d       	adc	r18, r1
 7bc:	82 2f       	mov	r24, r18
 7be:	76 2f       	mov	r23, r22
 7c0:	6a 2f       	mov	r22, r26
 7c2:	11 24       	eor	r1, r1
 7c4:	9f 57       	subi	r25, 0x7F	; 127
 7c6:	50 40       	sbci	r21, 0x00	; 0
 7c8:	9a f0       	brmi	.+38     	; 0x7f0 <__mulsf3_pse+0x88>
 7ca:	f1 f0       	breq	.+60     	; 0x808 <__mulsf3_pse+0xa0>
 7cc:	88 23       	and	r24, r24
 7ce:	4a f0       	brmi	.+18     	; 0x7e2 <__mulsf3_pse+0x7a>
 7d0:	ee 0f       	add	r30, r30
 7d2:	ff 1f       	adc	r31, r31
 7d4:	bb 1f       	adc	r27, r27
 7d6:	66 1f       	adc	r22, r22
 7d8:	77 1f       	adc	r23, r23
 7da:	88 1f       	adc	r24, r24
 7dc:	91 50       	subi	r25, 0x01	; 1
 7de:	50 40       	sbci	r21, 0x00	; 0
 7e0:	a9 f7       	brne	.-22     	; 0x7cc <__mulsf3_pse+0x64>
 7e2:	9e 3f       	cpi	r25, 0xFE	; 254
 7e4:	51 05       	cpc	r21, r1
 7e6:	80 f0       	brcs	.+32     	; 0x808 <__mulsf3_pse+0xa0>
 7e8:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_inf>
 7ec:	0c 94 40 03 	jmp	0x680	; 0x680 <__fp_szero>
 7f0:	5f 3f       	cpi	r21, 0xFF	; 255
 7f2:	e4 f3       	brlt	.-8      	; 0x7ec <__mulsf3_pse+0x84>
 7f4:	98 3e       	cpi	r25, 0xE8	; 232
 7f6:	d4 f3       	brlt	.-12     	; 0x7ec <__mulsf3_pse+0x84>
 7f8:	86 95       	lsr	r24
 7fa:	77 95       	ror	r23
 7fc:	67 95       	ror	r22
 7fe:	b7 95       	ror	r27
 800:	f7 95       	ror	r31
 802:	e7 95       	ror	r30
 804:	9f 5f       	subi	r25, 0xFF	; 255
 806:	c1 f7       	brne	.-16     	; 0x7f8 <__mulsf3_pse+0x90>
 808:	fe 2b       	or	r31, r30
 80a:	88 0f       	add	r24, r24
 80c:	91 1d       	adc	r25, r1
 80e:	96 95       	lsr	r25
 810:	87 95       	ror	r24
 812:	97 f9       	bld	r25, 7
 814:	08 95       	ret

00000816 <round>:
 816:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_splitA>
 81a:	e8 f0       	brcs	.+58     	; 0x856 <round+0x40>
 81c:	9e 37       	cpi	r25, 0x7E	; 126
 81e:	e8 f0       	brcs	.+58     	; 0x85a <round+0x44>
 820:	96 39       	cpi	r25, 0x96	; 150
 822:	b8 f4       	brcc	.+46     	; 0x852 <round+0x3c>
 824:	9e 38       	cpi	r25, 0x8E	; 142
 826:	48 f4       	brcc	.+18     	; 0x83a <round+0x24>
 828:	67 2f       	mov	r22, r23
 82a:	78 2f       	mov	r23, r24
 82c:	88 27       	eor	r24, r24
 82e:	98 5f       	subi	r25, 0xF8	; 248
 830:	f9 cf       	rjmp	.-14     	; 0x824 <round+0xe>
 832:	86 95       	lsr	r24
 834:	77 95       	ror	r23
 836:	67 95       	ror	r22
 838:	93 95       	inc	r25
 83a:	95 39       	cpi	r25, 0x95	; 149
 83c:	d0 f3       	brcs	.-12     	; 0x832 <round+0x1c>
 83e:	b6 2f       	mov	r27, r22
 840:	b1 70       	andi	r27, 0x01	; 1
 842:	6b 0f       	add	r22, r27
 844:	71 1d       	adc	r23, r1
 846:	81 1d       	adc	r24, r1
 848:	20 f4       	brcc	.+8      	; 0x852 <round+0x3c>
 84a:	87 95       	ror	r24
 84c:	77 95       	ror	r23
 84e:	67 95       	ror	r22
 850:	93 95       	inc	r25
 852:	0c 94 9c 04 	jmp	0x938	; 0x938 <__fp_mintl>
 856:	0c 94 b7 04 	jmp	0x96e	; 0x96e <__fp_mpack>
 85a:	0c 94 40 03 	jmp	0x680	; 0x680 <__fp_szero>

0000085e <__subsf3>:
 85e:	50 58       	subi	r21, 0x80	; 128

00000860 <__addsf3>:
 860:	bb 27       	eor	r27, r27
 862:	aa 27       	eor	r26, r26
 864:	0e 94 47 04 	call	0x88e	; 0x88e <__addsf3x>
 868:	0c 94 0c 03 	jmp	0x618	; 0x618 <__fp_round>
 86c:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_pscA>
 870:	38 f0       	brcs	.+14     	; 0x880 <__addsf3+0x20>
 872:	0e 94 05 03 	call	0x60a	; 0x60a <__fp_pscB>
 876:	20 f0       	brcs	.+8      	; 0x880 <__addsf3+0x20>
 878:	39 f4       	brne	.+14     	; 0x888 <__addsf3+0x28>
 87a:	9f 3f       	cpi	r25, 0xFF	; 255
 87c:	19 f4       	brne	.+6      	; 0x884 <__addsf3+0x24>
 87e:	26 f4       	brtc	.+8      	; 0x888 <__addsf3+0x28>
 880:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_nan>
 884:	0e f4       	brtc	.+2      	; 0x888 <__addsf3+0x28>
 886:	e0 95       	com	r30
 888:	e7 fb       	bst	r30, 7
 88a:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_inf>

0000088e <__addsf3x>:
 88e:	e9 2f       	mov	r30, r25
 890:	0e 94 1d 03 	call	0x63a	; 0x63a <__fp_split3>
 894:	58 f3       	brcs	.-42     	; 0x86c <__addsf3+0xc>
 896:	ba 17       	cp	r27, r26
 898:	62 07       	cpc	r22, r18
 89a:	73 07       	cpc	r23, r19
 89c:	84 07       	cpc	r24, r20
 89e:	95 07       	cpc	r25, r21
 8a0:	20 f0       	brcs	.+8      	; 0x8aa <__addsf3x+0x1c>
 8a2:	79 f4       	brne	.+30     	; 0x8c2 <__addsf3x+0x34>
 8a4:	a6 f5       	brtc	.+104    	; 0x90e <__stack+0xf>
 8a6:	0c 94 3f 03 	jmp	0x67e	; 0x67e <__fp_zero>
 8aa:	0e f4       	brtc	.+2      	; 0x8ae <__addsf3x+0x20>
 8ac:	e0 95       	com	r30
 8ae:	0b 2e       	mov	r0, r27
 8b0:	ba 2f       	mov	r27, r26
 8b2:	a0 2d       	mov	r26, r0
 8b4:	0b 01       	movw	r0, r22
 8b6:	b9 01       	movw	r22, r18
 8b8:	90 01       	movw	r18, r0
 8ba:	0c 01       	movw	r0, r24
 8bc:	ca 01       	movw	r24, r20
 8be:	a0 01       	movw	r20, r0
 8c0:	11 24       	eor	r1, r1
 8c2:	ff 27       	eor	r31, r31
 8c4:	59 1b       	sub	r21, r25
 8c6:	99 f0       	breq	.+38     	; 0x8ee <__addsf3x+0x60>
 8c8:	59 3f       	cpi	r21, 0xF9	; 249
 8ca:	50 f4       	brcc	.+20     	; 0x8e0 <__addsf3x+0x52>
 8cc:	50 3e       	cpi	r21, 0xE0	; 224
 8ce:	68 f1       	brcs	.+90     	; 0x92a <__stack+0x2b>
 8d0:	1a 16       	cp	r1, r26
 8d2:	f0 40       	sbci	r31, 0x00	; 0
 8d4:	a2 2f       	mov	r26, r18
 8d6:	23 2f       	mov	r18, r19
 8d8:	34 2f       	mov	r19, r20
 8da:	44 27       	eor	r20, r20
 8dc:	58 5f       	subi	r21, 0xF8	; 248
 8de:	f3 cf       	rjmp	.-26     	; 0x8c6 <__addsf3x+0x38>
 8e0:	46 95       	lsr	r20
 8e2:	37 95       	ror	r19
 8e4:	27 95       	ror	r18
 8e6:	a7 95       	ror	r26
 8e8:	f0 40       	sbci	r31, 0x00	; 0
 8ea:	53 95       	inc	r21
 8ec:	c9 f7       	brne	.-14     	; 0x8e0 <__addsf3x+0x52>
 8ee:	7e f4       	brtc	.+30     	; 0x90e <__stack+0xf>
 8f0:	1f 16       	cp	r1, r31
 8f2:	ba 0b       	sbc	r27, r26
 8f4:	62 0b       	sbc	r22, r18
 8f6:	73 0b       	sbc	r23, r19
 8f8:	84 0b       	sbc	r24, r20
 8fa:	ba f0       	brmi	.+46     	; 0x92a <__stack+0x2b>
 8fc:	91 50       	subi	r25, 0x01	; 1
 8fe:	a1 f0       	breq	.+40     	; 0x928 <__stack+0x29>
 900:	ff 0f       	add	r31, r31
 902:	bb 1f       	adc	r27, r27
 904:	66 1f       	adc	r22, r22
 906:	77 1f       	adc	r23, r23
 908:	88 1f       	adc	r24, r24
 90a:	c2 f7       	brpl	.-16     	; 0x8fc <__addsf3x+0x6e>
 90c:	0e c0       	rjmp	.+28     	; 0x92a <__stack+0x2b>
 90e:	ba 0f       	add	r27, r26
 910:	62 1f       	adc	r22, r18
 912:	73 1f       	adc	r23, r19
 914:	84 1f       	adc	r24, r20
 916:	48 f4       	brcc	.+18     	; 0x92a <__stack+0x2b>
 918:	87 95       	ror	r24
 91a:	77 95       	ror	r23
 91c:	67 95       	ror	r22
 91e:	b7 95       	ror	r27
 920:	f7 95       	ror	r31
 922:	9e 3f       	cpi	r25, 0xFE	; 254
 924:	08 f0       	brcs	.+2      	; 0x928 <__stack+0x29>
 926:	b0 cf       	rjmp	.-160    	; 0x888 <__addsf3+0x28>
 928:	93 95       	inc	r25
 92a:	88 0f       	add	r24, r24
 92c:	08 f0       	brcs	.+2      	; 0x930 <__stack+0x31>
 92e:	99 27       	eor	r25, r25
 930:	ee 0f       	add	r30, r30
 932:	97 95       	ror	r25
 934:	87 95       	ror	r24
 936:	08 95       	ret

00000938 <__fp_mintl>:
 938:	88 23       	and	r24, r24
 93a:	71 f4       	brne	.+28     	; 0x958 <__fp_mintl+0x20>
 93c:	77 23       	and	r23, r23
 93e:	21 f0       	breq	.+8      	; 0x948 <__fp_mintl+0x10>
 940:	98 50       	subi	r25, 0x08	; 8
 942:	87 2b       	or	r24, r23
 944:	76 2f       	mov	r23, r22
 946:	07 c0       	rjmp	.+14     	; 0x956 <__fp_mintl+0x1e>
 948:	66 23       	and	r22, r22
 94a:	11 f4       	brne	.+4      	; 0x950 <__fp_mintl+0x18>
 94c:	99 27       	eor	r25, r25
 94e:	0d c0       	rjmp	.+26     	; 0x96a <__fp_mintl+0x32>
 950:	90 51       	subi	r25, 0x10	; 16
 952:	86 2b       	or	r24, r22
 954:	70 e0       	ldi	r23, 0x00	; 0
 956:	60 e0       	ldi	r22, 0x00	; 0
 958:	2a f0       	brmi	.+10     	; 0x964 <__fp_mintl+0x2c>
 95a:	9a 95       	dec	r25
 95c:	66 0f       	add	r22, r22
 95e:	77 1f       	adc	r23, r23
 960:	88 1f       	adc	r24, r24
 962:	da f7       	brpl	.-10     	; 0x95a <__fp_mintl+0x22>
 964:	88 0f       	add	r24, r24
 966:	96 95       	lsr	r25
 968:	87 95       	ror	r24
 96a:	97 f9       	bld	r25, 7
 96c:	08 95       	ret

0000096e <__fp_mpack>:
 96e:	9f 3f       	cpi	r25, 0xFF	; 255
 970:	31 f0       	breq	.+12     	; 0x97e <__fp_mpack_finite+0xc>

00000972 <__fp_mpack_finite>:
 972:	91 50       	subi	r25, 0x01	; 1
 974:	20 f4       	brcc	.+8      	; 0x97e <__fp_mpack_finite+0xc>
 976:	87 95       	ror	r24
 978:	77 95       	ror	r23
 97a:	67 95       	ror	r22
 97c:	b7 95       	ror	r27
 97e:	88 0f       	add	r24, r24
 980:	91 1d       	adc	r25, r1
 982:	96 95       	lsr	r25
 984:	87 95       	ror	r24
 986:	97 f9       	bld	r25, 7
 988:	08 95       	ret

0000098a <__fp_powser>:
 98a:	df 93       	push	r29
 98c:	cf 93       	push	r28
 98e:	1f 93       	push	r17
 990:	0f 93       	push	r16
 992:	ff 92       	push	r15
 994:	ef 92       	push	r14
 996:	df 92       	push	r13
 998:	7b 01       	movw	r14, r22
 99a:	8c 01       	movw	r16, r24
 99c:	68 94       	set
 99e:	06 c0       	rjmp	.+12     	; 0x9ac <__fp_powser+0x22>
 9a0:	da 2e       	mov	r13, r26
 9a2:	ef 01       	movw	r28, r30
 9a4:	0e 94 b1 03 	call	0x762	; 0x762 <__mulsf3x>
 9a8:	fe 01       	movw	r30, r28
 9aa:	e8 94       	clt
 9ac:	a5 91       	lpm	r26, Z+
 9ae:	25 91       	lpm	r18, Z+
 9b0:	35 91       	lpm	r19, Z+
 9b2:	45 91       	lpm	r20, Z+
 9b4:	55 91       	lpm	r21, Z+
 9b6:	a6 f3       	brts	.-24     	; 0x9a0 <__fp_powser+0x16>
 9b8:	ef 01       	movw	r28, r30
 9ba:	0e 94 47 04 	call	0x88e	; 0x88e <__addsf3x>
 9be:	fe 01       	movw	r30, r28
 9c0:	97 01       	movw	r18, r14
 9c2:	a8 01       	movw	r20, r16
 9c4:	da 94       	dec	r13
 9c6:	69 f7       	brne	.-38     	; 0x9a2 <__fp_powser+0x18>
 9c8:	df 90       	pop	r13
 9ca:	ef 90       	pop	r14
 9cc:	ff 90       	pop	r15
 9ce:	0f 91       	pop	r16
 9d0:	1f 91       	pop	r17
 9d2:	cf 91       	pop	r28
 9d4:	df 91       	pop	r29
 9d6:	08 95       	ret

000009d8 <__divmodhi4>:
 9d8:	97 fb       	bst	r25, 7
 9da:	07 2e       	mov	r0, r23
 9dc:	16 f4       	brtc	.+4      	; 0x9e2 <__divmodhi4+0xa>
 9de:	00 94       	com	r0
 9e0:	07 d0       	rcall	.+14     	; 0x9f0 <__divmodhi4_neg1>
 9e2:	77 fd       	sbrc	r23, 7
 9e4:	09 d0       	rcall	.+18     	; 0x9f8 <__divmodhi4_neg2>
 9e6:	0e 94 00 05 	call	0xa00	; 0xa00 <__udivmodhi4>
 9ea:	07 fc       	sbrc	r0, 7
 9ec:	05 d0       	rcall	.+10     	; 0x9f8 <__divmodhi4_neg2>
 9ee:	3e f4       	brtc	.+14     	; 0x9fe <__divmodhi4_exit>

000009f0 <__divmodhi4_neg1>:
 9f0:	90 95       	com	r25
 9f2:	81 95       	neg	r24
 9f4:	9f 4f       	sbci	r25, 0xFF	; 255
 9f6:	08 95       	ret

000009f8 <__divmodhi4_neg2>:
 9f8:	70 95       	com	r23
 9fa:	61 95       	neg	r22
 9fc:	7f 4f       	sbci	r23, 0xFF	; 255

000009fe <__divmodhi4_exit>:
 9fe:	08 95       	ret

00000a00 <__udivmodhi4>:
 a00:	aa 1b       	sub	r26, r26
 a02:	bb 1b       	sub	r27, r27
 a04:	51 e1       	ldi	r21, 0x11	; 17
 a06:	07 c0       	rjmp	.+14     	; 0xa16 <__udivmodhi4_ep>

00000a08 <__udivmodhi4_loop>:
 a08:	aa 1f       	adc	r26, r26
 a0a:	bb 1f       	adc	r27, r27
 a0c:	a6 17       	cp	r26, r22
 a0e:	b7 07       	cpc	r27, r23
 a10:	10 f0       	brcs	.+4      	; 0xa16 <__udivmodhi4_ep>
 a12:	a6 1b       	sub	r26, r22
 a14:	b7 0b       	sbc	r27, r23

00000a16 <__udivmodhi4_ep>:
 a16:	88 1f       	adc	r24, r24
 a18:	99 1f       	adc	r25, r25
 a1a:	5a 95       	dec	r21
 a1c:	a9 f7       	brne	.-22     	; 0xa08 <__udivmodhi4_loop>
 a1e:	80 95       	com	r24
 a20:	90 95       	com	r25
 a22:	bc 01       	movw	r22, r24
 a24:	cd 01       	movw	r24, r26
 a26:	08 95       	ret

00000a28 <malloc>:
 a28:	0f 93       	push	r16
 a2a:	1f 93       	push	r17
 a2c:	cf 93       	push	r28
 a2e:	df 93       	push	r29
 a30:	82 30       	cpi	r24, 0x02	; 2
 a32:	91 05       	cpc	r25, r1
 a34:	10 f4       	brcc	.+4      	; 0xa3a <malloc+0x12>
 a36:	82 e0       	ldi	r24, 0x02	; 2
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <__flp>
 a3e:	f0 91 1f 01 	lds	r31, 0x011F	; 0x80011f <__flp+0x1>
 a42:	20 e0       	ldi	r18, 0x00	; 0
 a44:	30 e0       	ldi	r19, 0x00	; 0
 a46:	a0 e0       	ldi	r26, 0x00	; 0
 a48:	b0 e0       	ldi	r27, 0x00	; 0
 a4a:	30 97       	sbiw	r30, 0x00	; 0
 a4c:	19 f1       	breq	.+70     	; 0xa94 <malloc+0x6c>
 a4e:	40 81       	ld	r20, Z
 a50:	51 81       	ldd	r21, Z+1	; 0x01
 a52:	02 81       	ldd	r16, Z+2	; 0x02
 a54:	13 81       	ldd	r17, Z+3	; 0x03
 a56:	48 17       	cp	r20, r24
 a58:	59 07       	cpc	r21, r25
 a5a:	c8 f0       	brcs	.+50     	; 0xa8e <malloc+0x66>
 a5c:	84 17       	cp	r24, r20
 a5e:	95 07       	cpc	r25, r21
 a60:	69 f4       	brne	.+26     	; 0xa7c <malloc+0x54>
 a62:	10 97       	sbiw	r26, 0x00	; 0
 a64:	31 f0       	breq	.+12     	; 0xa72 <malloc+0x4a>
 a66:	12 96       	adiw	r26, 0x02	; 2
 a68:	0c 93       	st	X, r16
 a6a:	12 97       	sbiw	r26, 0x02	; 2
 a6c:	13 96       	adiw	r26, 0x03	; 3
 a6e:	1c 93       	st	X, r17
 a70:	27 c0       	rjmp	.+78     	; 0xac0 <malloc+0x98>
 a72:	00 93 1e 01 	sts	0x011E, r16	; 0x80011e <__flp>
 a76:	10 93 1f 01 	sts	0x011F, r17	; 0x80011f <__flp+0x1>
 a7a:	22 c0       	rjmp	.+68     	; 0xac0 <malloc+0x98>
 a7c:	21 15       	cp	r18, r1
 a7e:	31 05       	cpc	r19, r1
 a80:	19 f0       	breq	.+6      	; 0xa88 <malloc+0x60>
 a82:	42 17       	cp	r20, r18
 a84:	53 07       	cpc	r21, r19
 a86:	18 f4       	brcc	.+6      	; 0xa8e <malloc+0x66>
 a88:	9a 01       	movw	r18, r20
 a8a:	bd 01       	movw	r22, r26
 a8c:	ef 01       	movw	r28, r30
 a8e:	df 01       	movw	r26, r30
 a90:	f8 01       	movw	r30, r16
 a92:	db cf       	rjmp	.-74     	; 0xa4a <malloc+0x22>
 a94:	21 15       	cp	r18, r1
 a96:	31 05       	cpc	r19, r1
 a98:	f9 f0       	breq	.+62     	; 0xad8 <malloc+0xb0>
 a9a:	28 1b       	sub	r18, r24
 a9c:	39 0b       	sbc	r19, r25
 a9e:	24 30       	cpi	r18, 0x04	; 4
 aa0:	31 05       	cpc	r19, r1
 aa2:	80 f4       	brcc	.+32     	; 0xac4 <malloc+0x9c>
 aa4:	8a 81       	ldd	r24, Y+2	; 0x02
 aa6:	9b 81       	ldd	r25, Y+3	; 0x03
 aa8:	61 15       	cp	r22, r1
 aaa:	71 05       	cpc	r23, r1
 aac:	21 f0       	breq	.+8      	; 0xab6 <malloc+0x8e>
 aae:	fb 01       	movw	r30, r22
 ab0:	93 83       	std	Z+3, r25	; 0x03
 ab2:	82 83       	std	Z+2, r24	; 0x02
 ab4:	04 c0       	rjmp	.+8      	; 0xabe <malloc+0x96>
 ab6:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__flp+0x1>
 aba:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__flp>
 abe:	fe 01       	movw	r30, r28
 ac0:	32 96       	adiw	r30, 0x02	; 2
 ac2:	44 c0       	rjmp	.+136    	; 0xb4c <malloc+0x124>
 ac4:	fe 01       	movw	r30, r28
 ac6:	e2 0f       	add	r30, r18
 ac8:	f3 1f       	adc	r31, r19
 aca:	81 93       	st	Z+, r24
 acc:	91 93       	st	Z+, r25
 ace:	22 50       	subi	r18, 0x02	; 2
 ad0:	31 09       	sbc	r19, r1
 ad2:	39 83       	std	Y+1, r19	; 0x01
 ad4:	28 83       	st	Y, r18
 ad6:	3a c0       	rjmp	.+116    	; 0xb4c <malloc+0x124>
 ad8:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__brkval>
 adc:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__brkval+0x1>
 ae0:	23 2b       	or	r18, r19
 ae2:	41 f4       	brne	.+16     	; 0xaf4 <malloc+0xcc>
 ae4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 ae8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 aec:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <__brkval+0x1>
 af0:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <__brkval>
 af4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 af8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 afc:	21 15       	cp	r18, r1
 afe:	31 05       	cpc	r19, r1
 b00:	41 f4       	brne	.+16     	; 0xb12 <malloc+0xea>
 b02:	2d b7       	in	r18, 0x3d	; 61
 b04:	3e b7       	in	r19, 0x3e	; 62
 b06:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 b0a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 b0e:	24 1b       	sub	r18, r20
 b10:	35 0b       	sbc	r19, r21
 b12:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <__brkval>
 b16:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <__brkval+0x1>
 b1a:	e2 17       	cp	r30, r18
 b1c:	f3 07       	cpc	r31, r19
 b1e:	a0 f4       	brcc	.+40     	; 0xb48 <malloc+0x120>
 b20:	2e 1b       	sub	r18, r30
 b22:	3f 0b       	sbc	r19, r31
 b24:	28 17       	cp	r18, r24
 b26:	39 07       	cpc	r19, r25
 b28:	78 f0       	brcs	.+30     	; 0xb48 <malloc+0x120>
 b2a:	ac 01       	movw	r20, r24
 b2c:	4e 5f       	subi	r20, 0xFE	; 254
 b2e:	5f 4f       	sbci	r21, 0xFF	; 255
 b30:	24 17       	cp	r18, r20
 b32:	35 07       	cpc	r19, r21
 b34:	48 f0       	brcs	.+18     	; 0xb48 <malloc+0x120>
 b36:	4e 0f       	add	r20, r30
 b38:	5f 1f       	adc	r21, r31
 b3a:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <__brkval+0x1>
 b3e:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <__brkval>
 b42:	81 93       	st	Z+, r24
 b44:	91 93       	st	Z+, r25
 b46:	02 c0       	rjmp	.+4      	; 0xb4c <malloc+0x124>
 b48:	e0 e0       	ldi	r30, 0x00	; 0
 b4a:	f0 e0       	ldi	r31, 0x00	; 0
 b4c:	cf 01       	movw	r24, r30
 b4e:	df 91       	pop	r29
 b50:	cf 91       	pop	r28
 b52:	1f 91       	pop	r17
 b54:	0f 91       	pop	r16
 b56:	08 95       	ret

00000b58 <free>:
 b58:	cf 93       	push	r28
 b5a:	df 93       	push	r29
 b5c:	00 97       	sbiw	r24, 0x00	; 0
 b5e:	09 f4       	brne	.+2      	; 0xb62 <free+0xa>
 b60:	81 c0       	rjmp	.+258    	; 0xc64 <free+0x10c>
 b62:	fc 01       	movw	r30, r24
 b64:	32 97       	sbiw	r30, 0x02	; 2
 b66:	13 82       	std	Z+3, r1	; 0x03
 b68:	12 82       	std	Z+2, r1	; 0x02
 b6a:	a0 91 1e 01 	lds	r26, 0x011E	; 0x80011e <__flp>
 b6e:	b0 91 1f 01 	lds	r27, 0x011F	; 0x80011f <__flp+0x1>
 b72:	10 97       	sbiw	r26, 0x00	; 0
 b74:	81 f4       	brne	.+32     	; 0xb96 <free+0x3e>
 b76:	20 81       	ld	r18, Z
 b78:	31 81       	ldd	r19, Z+1	; 0x01
 b7a:	82 0f       	add	r24, r18
 b7c:	93 1f       	adc	r25, r19
 b7e:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__brkval>
 b82:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__brkval+0x1>
 b86:	28 17       	cp	r18, r24
 b88:	39 07       	cpc	r19, r25
 b8a:	51 f5       	brne	.+84     	; 0xbe0 <free+0x88>
 b8c:	f0 93 1d 01 	sts	0x011D, r31	; 0x80011d <__brkval+0x1>
 b90:	e0 93 1c 01 	sts	0x011C, r30	; 0x80011c <__brkval>
 b94:	67 c0       	rjmp	.+206    	; 0xc64 <free+0x10c>
 b96:	ed 01       	movw	r28, r26
 b98:	20 e0       	ldi	r18, 0x00	; 0
 b9a:	30 e0       	ldi	r19, 0x00	; 0
 b9c:	ce 17       	cp	r28, r30
 b9e:	df 07       	cpc	r29, r31
 ba0:	40 f4       	brcc	.+16     	; 0xbb2 <free+0x5a>
 ba2:	4a 81       	ldd	r20, Y+2	; 0x02
 ba4:	5b 81       	ldd	r21, Y+3	; 0x03
 ba6:	9e 01       	movw	r18, r28
 ba8:	41 15       	cp	r20, r1
 baa:	51 05       	cpc	r21, r1
 bac:	f1 f0       	breq	.+60     	; 0xbea <free+0x92>
 bae:	ea 01       	movw	r28, r20
 bb0:	f5 cf       	rjmp	.-22     	; 0xb9c <free+0x44>
 bb2:	d3 83       	std	Z+3, r29	; 0x03
 bb4:	c2 83       	std	Z+2, r28	; 0x02
 bb6:	40 81       	ld	r20, Z
 bb8:	51 81       	ldd	r21, Z+1	; 0x01
 bba:	84 0f       	add	r24, r20
 bbc:	95 1f       	adc	r25, r21
 bbe:	c8 17       	cp	r28, r24
 bc0:	d9 07       	cpc	r29, r25
 bc2:	59 f4       	brne	.+22     	; 0xbda <free+0x82>
 bc4:	88 81       	ld	r24, Y
 bc6:	99 81       	ldd	r25, Y+1	; 0x01
 bc8:	84 0f       	add	r24, r20
 bca:	95 1f       	adc	r25, r21
 bcc:	02 96       	adiw	r24, 0x02	; 2
 bce:	91 83       	std	Z+1, r25	; 0x01
 bd0:	80 83       	st	Z, r24
 bd2:	8a 81       	ldd	r24, Y+2	; 0x02
 bd4:	9b 81       	ldd	r25, Y+3	; 0x03
 bd6:	93 83       	std	Z+3, r25	; 0x03
 bd8:	82 83       	std	Z+2, r24	; 0x02
 bda:	21 15       	cp	r18, r1
 bdc:	31 05       	cpc	r19, r1
 bde:	29 f4       	brne	.+10     	; 0xbea <free+0x92>
 be0:	f0 93 1f 01 	sts	0x011F, r31	; 0x80011f <__flp+0x1>
 be4:	e0 93 1e 01 	sts	0x011E, r30	; 0x80011e <__flp>
 be8:	3d c0       	rjmp	.+122    	; 0xc64 <free+0x10c>
 bea:	e9 01       	movw	r28, r18
 bec:	fb 83       	std	Y+3, r31	; 0x03
 bee:	ea 83       	std	Y+2, r30	; 0x02
 bf0:	49 91       	ld	r20, Y+
 bf2:	59 91       	ld	r21, Y+
 bf4:	c4 0f       	add	r28, r20
 bf6:	d5 1f       	adc	r29, r21
 bf8:	ec 17       	cp	r30, r28
 bfa:	fd 07       	cpc	r31, r29
 bfc:	61 f4       	brne	.+24     	; 0xc16 <free+0xbe>
 bfe:	80 81       	ld	r24, Z
 c00:	91 81       	ldd	r25, Z+1	; 0x01
 c02:	84 0f       	add	r24, r20
 c04:	95 1f       	adc	r25, r21
 c06:	02 96       	adiw	r24, 0x02	; 2
 c08:	e9 01       	movw	r28, r18
 c0a:	99 83       	std	Y+1, r25	; 0x01
 c0c:	88 83       	st	Y, r24
 c0e:	82 81       	ldd	r24, Z+2	; 0x02
 c10:	93 81       	ldd	r25, Z+3	; 0x03
 c12:	9b 83       	std	Y+3, r25	; 0x03
 c14:	8a 83       	std	Y+2, r24	; 0x02
 c16:	e0 e0       	ldi	r30, 0x00	; 0
 c18:	f0 e0       	ldi	r31, 0x00	; 0
 c1a:	12 96       	adiw	r26, 0x02	; 2
 c1c:	8d 91       	ld	r24, X+
 c1e:	9c 91       	ld	r25, X
 c20:	13 97       	sbiw	r26, 0x03	; 3
 c22:	00 97       	sbiw	r24, 0x00	; 0
 c24:	19 f0       	breq	.+6      	; 0xc2c <free+0xd4>
 c26:	fd 01       	movw	r30, r26
 c28:	dc 01       	movw	r26, r24
 c2a:	f7 cf       	rjmp	.-18     	; 0xc1a <free+0xc2>
 c2c:	8d 91       	ld	r24, X+
 c2e:	9c 91       	ld	r25, X
 c30:	11 97       	sbiw	r26, 0x01	; 1
 c32:	9d 01       	movw	r18, r26
 c34:	2e 5f       	subi	r18, 0xFE	; 254
 c36:	3f 4f       	sbci	r19, 0xFF	; 255
 c38:	82 0f       	add	r24, r18
 c3a:	93 1f       	adc	r25, r19
 c3c:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__brkval>
 c40:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__brkval+0x1>
 c44:	28 17       	cp	r18, r24
 c46:	39 07       	cpc	r19, r25
 c48:	69 f4       	brne	.+26     	; 0xc64 <free+0x10c>
 c4a:	30 97       	sbiw	r30, 0x00	; 0
 c4c:	29 f4       	brne	.+10     	; 0xc58 <free+0x100>
 c4e:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <__flp+0x1>
 c52:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <__flp>
 c56:	02 c0       	rjmp	.+4      	; 0xc5c <free+0x104>
 c58:	13 82       	std	Z+3, r1	; 0x03
 c5a:	12 82       	std	Z+2, r1	; 0x02
 c5c:	b0 93 1d 01 	sts	0x011D, r27	; 0x80011d <__brkval+0x1>
 c60:	a0 93 1c 01 	sts	0x011C, r26	; 0x80011c <__brkval>
 c64:	df 91       	pop	r29
 c66:	cf 91       	pop	r28
 c68:	08 95       	ret

00000c6a <_exit>:
 c6a:	f8 94       	cli

00000c6c <__stop_program>:
 c6c:	ff cf       	rjmp	.-2      	; 0xc6c <__stop_program>
